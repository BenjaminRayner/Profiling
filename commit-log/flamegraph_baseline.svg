<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1332"><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="0.0000%" y="885" width="0.0751%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="0.0000%" y="869" width="0.0751%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="0.0000%" y="853" width="0.0751%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.0000%" y="837" width="0.0751%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>[[heap]] (2 samples, 0.15%)</title><rect x="0.0000%" y="901" width="0.1502%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="911.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.08%)</title><rect x="0.0751%" y="885" width="0.0751%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.3251%" y="895.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="0.1502%" y="885" width="0.0751%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.4002%" y="895.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (3 samples, 0.23%)</title><rect x="0.2252%" y="885" width="0.2252%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="3"/><text x="0.4752%" y="895.50"></text></g><g><title>[anon] (5 samples, 0.38%)</title><rect x="0.1502%" y="901" width="0.3754%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="5"/><text x="0.4002%" y="911.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.08%)</title><rect x="0.4505%" y="885" width="0.0751%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.7005%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="0.6757%" y="885" width="0.0751%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="1"/><text x="0.9257%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.7508%" y="885" width="0.1502%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="2"/><text x="1.0008%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.7508%" y="869" width="0.1502%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="2"/><text x="1.0008%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.7508%" y="853" width="0.1502%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="2"/><text x="1.0008%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.7508%" y="837" width="0.1502%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="2"/><text x="1.0008%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.7508%" y="821" width="0.1502%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="2"/><text x="1.0008%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.7508%" y="805" width="0.1502%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="2"/><text x="1.0008%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.7508%" y="789" width="0.1502%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="2"/><text x="1.0008%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.7508%" y="773" width="0.1502%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="2"/><text x="1.0008%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.8258%" y="757" width="0.0751%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="1"/><text x="1.0758%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.8258%" y="741" width="0.0751%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="1"/><text x="1.0758%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.8258%" y="725" width="0.0751%" height="15" fill="rgb(235,183,28)" fg:x="11" fg:w="1"/><text x="1.0758%" y="735.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="0.9009%" y="885" width="0.0751%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="1"/><text x="1.1509%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="869" width="0.0751%" height="15" fill="rgb(247,18,42)" fg:x="12" fg:w="1"/><text x="1.1509%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="853" width="0.0751%" height="15" fill="rgb(241,131,45)" fg:x="12" fg:w="1"/><text x="1.1509%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="837" width="0.0751%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="1"/><text x="1.1509%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="821" width="0.0751%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="1"/><text x="1.1509%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="805" width="0.0751%" height="15" fill="rgb(238,160,17)" fg:x="12" fg:w="1"/><text x="1.1509%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="789" width="0.0751%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="1"/><text x="1.1509%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="773" width="0.0751%" height="15" fill="rgb(232,36,49)" fg:x="12" fg:w="1"/><text x="1.1509%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="757" width="0.0751%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="1"/><text x="1.1509%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="741" width="0.0751%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="1"/><text x="1.1509%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="725" width="0.0751%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="1"/><text x="1.1509%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="709" width="0.0751%" height="15" fill="rgb(254,191,54)" fg:x="12" fg:w="1"/><text x="1.1509%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="693" width="0.0751%" height="15" fill="rgb(241,83,37)" fg:x="12" fg:w="1"/><text x="1.1509%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="677" width="0.0751%" height="15" fill="rgb(233,36,39)" fg:x="12" fg:w="1"/><text x="1.1509%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="661" width="0.0751%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="1"/><text x="1.1509%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.9009%" y="645" width="0.0751%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="1"/><text x="1.1509%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.38%)</title><rect x="0.9760%" y="885" width="0.3754%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="5"/><text x="1.2260%" y="895.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="1.3514%" y="885" width="0.0751%" height="15" fill="rgb(232,182,51)" fg:x="18" fg:w="1"/><text x="1.6014%" y="895.50"></text></g><g><title>core::slice::memchr::memchr_aligned (25 samples, 1.88%)</title><rect x="1.4264%" y="885" width="1.8769%" height="15" fill="rgb(231,60,39)" fg:x="19" fg:w="25"/><text x="1.6764%" y="895.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (4 samples, 0.30%)</title><rect x="3.0030%" y="869" width="0.3003%" height="15" fill="rgb(208,69,12)" fg:x="40" fg:w="4"/><text x="3.2530%" y="879.50"></text></g><g><title>core::ptr::align_offset (4 samples, 0.30%)</title><rect x="3.0030%" y="853" width="0.3003%" height="15" fill="rgb(235,93,37)" fg:x="40" fg:w="4"/><text x="3.2530%" y="863.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (12 samples, 0.90%)</title><rect x="3.3033%" y="885" width="0.9009%" height="15" fill="rgb(213,116,39)" fg:x="44" fg:w="12"/><text x="3.5533%" y="895.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (10 samples, 0.75%)</title><rect x="4.2042%" y="885" width="0.7508%" height="15" fill="rgb(222,207,29)" fg:x="56" fg:w="10"/><text x="4.4542%" y="895.50"></text></g><g><title>[unknown] (71 samples, 5.33%)</title><rect x="0.5255%" y="901" width="5.3303%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="71"/><text x="0.7755%" y="911.50">[unknow..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (12 samples, 0.90%)</title><rect x="4.9550%" y="885" width="0.9009%" height="15" fill="rgb(218,138,4)" fg:x="66" fg:w="12"/><text x="5.2050%" y="895.50"></text></g><g><title>[unknown] (42 samples, 3.15%)</title><rect x="5.8559%" y="885" width="3.1532%" height="15" fill="rgb(250,191,14)" fg:x="78" fg:w="42"/><text x="6.1059%" y="895.50">[un..</text></g><g><title>[unknown] (42 samples, 3.15%)</title><rect x="5.8559%" y="869" width="3.1532%" height="15" fill="rgb(239,60,40)" fg:x="78" fg:w="42"/><text x="6.1059%" y="879.50">[un..</text></g><g><title>[unknown] (42 samples, 3.15%)</title><rect x="5.8559%" y="853" width="3.1532%" height="15" fill="rgb(206,27,48)" fg:x="78" fg:w="42"/><text x="6.1059%" y="863.50">[un..</text></g><g><title>[unknown] (42 samples, 3.15%)</title><rect x="5.8559%" y="837" width="3.1532%" height="15" fill="rgb(225,35,8)" fg:x="78" fg:w="42"/><text x="6.1059%" y="847.50">[un..</text></g><g><title>[unknown] (42 samples, 3.15%)</title><rect x="5.8559%" y="821" width="3.1532%" height="15" fill="rgb(250,213,24)" fg:x="78" fg:w="42"/><text x="6.1059%" y="831.50">[un..</text></g><g><title>[unknown] (41 samples, 3.08%)</title><rect x="5.9309%" y="805" width="3.0781%" height="15" fill="rgb(247,123,22)" fg:x="79" fg:w="41"/><text x="6.1809%" y="815.50">[un..</text></g><g><title>[unknown] (41 samples, 3.08%)</title><rect x="5.9309%" y="789" width="3.0781%" height="15" fill="rgb(231,138,38)" fg:x="79" fg:w="41"/><text x="6.1809%" y="799.50">[un..</text></g><g><title>[unknown] (41 samples, 3.08%)</title><rect x="5.9309%" y="773" width="3.0781%" height="15" fill="rgb(231,145,46)" fg:x="79" fg:w="41"/><text x="6.1809%" y="783.50">[un..</text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (5 samples, 0.38%)</title><rect x="9.0090%" y="661" width="0.3754%" height="15" fill="rgb(251,118,11)" fg:x="120" fg:w="5"/><text x="9.2590%" y="671.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (5 samples, 0.38%)</title><rect x="9.0090%" y="645" width="0.3754%" height="15" fill="rgb(217,147,25)" fg:x="120" fg:w="5"/><text x="9.2590%" y="655.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (5 samples, 0.38%)</title><rect x="9.0090%" y="629" width="0.3754%" height="15" fill="rgb(247,81,37)" fg:x="120" fg:w="5"/><text x="9.2590%" y="639.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (5 samples, 0.38%)</title><rect x="9.0090%" y="613" width="0.3754%" height="15" fill="rgb(209,12,38)" fg:x="120" fg:w="5"/><text x="9.2590%" y="623.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (5 samples, 0.38%)</title><rect x="9.0090%" y="597" width="0.3754%" height="15" fill="rgb(227,1,9)" fg:x="120" fg:w="5"/><text x="9.2590%" y="607.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (5 samples, 0.38%)</title><rect x="9.0090%" y="581" width="0.3754%" height="15" fill="rgb(248,47,43)" fg:x="120" fg:w="5"/><text x="9.2590%" y="591.50"></text></g><g><title>__GI___sched_yield (5 samples, 0.38%)</title><rect x="9.0090%" y="565" width="0.3754%" height="15" fill="rgb(221,10,30)" fg:x="120" fg:w="5"/><text x="9.2590%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="549" width="0.3754%" height="15" fill="rgb(210,229,1)" fg:x="120" fg:w="5"/><text x="9.2590%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="533" width="0.3754%" height="15" fill="rgb(222,148,37)" fg:x="120" fg:w="5"/><text x="9.2590%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="517" width="0.3754%" height="15" fill="rgb(234,67,33)" fg:x="120" fg:w="5"/><text x="9.2590%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="501" width="0.3754%" height="15" fill="rgb(247,98,35)" fg:x="120" fg:w="5"/><text x="9.2590%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="485" width="0.3754%" height="15" fill="rgb(247,138,52)" fg:x="120" fg:w="5"/><text x="9.2590%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="469" width="0.3754%" height="15" fill="rgb(213,79,30)" fg:x="120" fg:w="5"/><text x="9.2590%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="453" width="0.3754%" height="15" fill="rgb(246,177,23)" fg:x="120" fg:w="5"/><text x="9.2590%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="437" width="0.3754%" height="15" fill="rgb(230,62,27)" fg:x="120" fg:w="5"/><text x="9.2590%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="421" width="0.3754%" height="15" fill="rgb(216,154,8)" fg:x="120" fg:w="5"/><text x="9.2590%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="405" width="0.3754%" height="15" fill="rgb(244,35,45)" fg:x="120" fg:w="5"/><text x="9.2590%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="389" width="0.3754%" height="15" fill="rgb(251,115,12)" fg:x="120" fg:w="5"/><text x="9.2590%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="9.0090%" y="373" width="0.3754%" height="15" fill="rgb(240,54,50)" fg:x="120" fg:w="5"/><text x="9.2590%" y="383.50"></text></g><g><title>__rust_dealloc (2 samples, 0.15%)</title><rect x="9.3844%" y="485" width="0.1502%" height="15" fill="rgb(233,84,52)" fg:x="125" fg:w="2"/><text x="9.6344%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="9.3844%" y="629" width="0.2252%" height="15" fill="rgb(207,117,47)" fg:x="125" fg:w="3"/><text x="9.6344%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (3 samples, 0.23%)</title><rect x="9.3844%" y="613" width="0.2252%" height="15" fill="rgb(249,43,39)" fg:x="125" fg:w="3"/><text x="9.6344%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (3 samples, 0.23%)</title><rect x="9.3844%" y="597" width="0.2252%" height="15" fill="rgb(209,38,44)" fg:x="125" fg:w="3"/><text x="9.6344%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.23%)</title><rect x="9.3844%" y="581" width="0.2252%" height="15" fill="rgb(236,212,23)" fg:x="125" fg:w="3"/><text x="9.6344%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.23%)</title><rect x="9.3844%" y="565" width="0.2252%" height="15" fill="rgb(242,79,21)" fg:x="125" fg:w="3"/><text x="9.6344%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.23%)</title><rect x="9.3844%" y="549" width="0.2252%" height="15" fill="rgb(211,96,35)" fg:x="125" fg:w="3"/><text x="9.6344%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="9.3844%" y="533" width="0.2252%" height="15" fill="rgb(253,215,40)" fg:x="125" fg:w="3"/><text x="9.6344%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.23%)</title><rect x="9.3844%" y="517" width="0.2252%" height="15" fill="rgb(211,81,21)" fg:x="125" fg:w="3"/><text x="9.6344%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.23%)</title><rect x="9.3844%" y="501" width="0.2252%" height="15" fill="rgb(208,190,38)" fg:x="125" fg:w="3"/><text x="9.6344%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="9.5345%" y="485" width="0.0751%" height="15" fill="rgb(235,213,38)" fg:x="127" fg:w="1"/><text x="9.7845%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (4 samples, 0.30%)</title><rect x="9.3844%" y="645" width="0.3003%" height="15" fill="rgb(237,122,38)" fg:x="125" fg:w="4"/><text x="9.6344%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1 samples, 0.08%)</title><rect x="9.6096%" y="629" width="0.0751%" height="15" fill="rgb(244,218,35)" fg:x="128" fg:w="1"/><text x="9.8596%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.6096%" y="613" width="0.0751%" height="15" fill="rgb(240,68,47)" fg:x="128" fg:w="1"/><text x="9.8596%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="9.6096%" y="597" width="0.0751%" height="15" fill="rgb(210,16,53)" fg:x="128" fg:w="1"/><text x="9.8596%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="9.6096%" y="581" width="0.0751%" height="15" fill="rgb(235,124,12)" fg:x="128" fg:w="1"/><text x="9.8596%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="9.6096%" y="565" width="0.0751%" height="15" fill="rgb(224,169,11)" fg:x="128" fg:w="1"/><text x="9.8596%" y="575.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="9.6096%" y="549" width="0.0751%" height="15" fill="rgb(250,166,2)" fg:x="128" fg:w="1"/><text x="9.8596%" y="559.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="9.7598%" y="453" width="0.2252%" height="15" fill="rgb(242,216,29)" fg:x="130" fg:w="3"/><text x="10.0098%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="9.7598%" y="437" width="0.2252%" height="15" fill="rgb(230,116,27)" fg:x="130" fg:w="3"/><text x="10.0098%" y="447.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="9.7598%" y="421" width="0.2252%" height="15" fill="rgb(228,99,48)" fg:x="130" fg:w="3"/><text x="10.0098%" y="431.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (3 samples, 0.23%)</title><rect x="9.7598%" y="405" width="0.2252%" height="15" fill="rgb(253,11,6)" fg:x="130" fg:w="3"/><text x="10.0098%" y="415.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.23%)</title><rect x="9.7598%" y="389" width="0.2252%" height="15" fill="rgb(247,143,39)" fg:x="130" fg:w="3"/><text x="10.0098%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.23%)</title><rect x="9.7598%" y="373" width="0.2252%" height="15" fill="rgb(236,97,10)" fg:x="130" fg:w="3"/><text x="10.0098%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.23%)</title><rect x="9.7598%" y="357" width="0.2252%" height="15" fill="rgb(233,208,19)" fg:x="130" fg:w="3"/><text x="10.0098%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.23%)</title><rect x="9.7598%" y="341" width="0.2252%" height="15" fill="rgb(216,164,2)" fg:x="130" fg:w="3"/><text x="10.0098%" y="351.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.23%)</title><rect x="9.7598%" y="325" width="0.2252%" height="15" fill="rgb(220,129,5)" fg:x="130" fg:w="3"/><text x="10.0098%" y="335.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.38%)</title><rect x="10.0601%" y="213" width="0.3754%" height="15" fill="rgb(242,17,10)" fg:x="134" fg:w="5"/><text x="10.3101%" y="223.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="10.2102%" y="197" width="0.2252%" height="15" fill="rgb(242,107,0)" fg:x="136" fg:w="3"/><text x="10.4602%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.45%)</title><rect x="10.0601%" y="309" width="0.4505%" height="15" fill="rgb(251,28,31)" fg:x="134" fg:w="6"/><text x="10.3101%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.45%)</title><rect x="10.0601%" y="293" width="0.4505%" height="15" fill="rgb(233,223,10)" fg:x="134" fg:w="6"/><text x="10.3101%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.45%)</title><rect x="10.0601%" y="277" width="0.4505%" height="15" fill="rgb(215,21,27)" fg:x="134" fg:w="6"/><text x="10.3101%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.45%)</title><rect x="10.0601%" y="261" width="0.4505%" height="15" fill="rgb(232,23,21)" fg:x="134" fg:w="6"/><text x="10.3101%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.45%)</title><rect x="10.0601%" y="245" width="0.4505%" height="15" fill="rgb(244,5,23)" fg:x="134" fg:w="6"/><text x="10.3101%" y="255.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.45%)</title><rect x="10.0601%" y="229" width="0.4505%" height="15" fill="rgb(226,81,46)" fg:x="134" fg:w="6"/><text x="10.3101%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="10.4354%" y="213" width="0.0751%" height="15" fill="rgb(247,70,30)" fg:x="139" fg:w="1"/><text x="10.6854%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="10.4354%" y="197" width="0.0751%" height="15" fill="rgb(212,68,19)" fg:x="139" fg:w="1"/><text x="10.6854%" y="207.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product (12 samples, 0.90%)</title><rect x="9.6847%" y="645" width="0.9009%" height="15" fill="rgb(240,187,13)" fg:x="129" fg:w="12"/><text x="9.9347%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.90%)</title><rect x="9.6847%" y="629" width="0.9009%" height="15" fill="rgb(223,113,26)" fg:x="129" fg:w="12"/><text x="9.9347%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.90%)</title><rect x="9.6847%" y="613" width="0.9009%" height="15" fill="rgb(206,192,2)" fg:x="129" fg:w="12"/><text x="9.9347%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.90%)</title><rect x="9.6847%" y="597" width="0.9009%" height="15" fill="rgb(241,108,4)" fg:x="129" fg:w="12"/><text x="9.9347%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.90%)</title><rect x="9.6847%" y="581" width="0.9009%" height="15" fill="rgb(247,173,49)" fg:x="129" fg:w="12"/><text x="9.9347%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.90%)</title><rect x="9.6847%" y="565" width="0.9009%" height="15" fill="rgb(224,114,35)" fg:x="129" fg:w="12"/><text x="9.9347%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 0.90%)</title><rect x="9.6847%" y="549" width="0.9009%" height="15" fill="rgb(245,159,27)" fg:x="129" fg:w="12"/><text x="9.9347%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.90%)</title><rect x="9.6847%" y="533" width="0.9009%" height="15" fill="rgb(245,172,44)" fg:x="129" fg:w="12"/><text x="9.9347%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.83%)</title><rect x="9.7598%" y="517" width="0.8258%" height="15" fill="rgb(236,23,11)" fg:x="130" fg:w="11"/><text x="10.0098%" y="527.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (11 samples, 0.83%)</title><rect x="9.7598%" y="501" width="0.8258%" height="15" fill="rgb(205,117,38)" fg:x="130" fg:w="11"/><text x="10.0098%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.83%)</title><rect x="9.7598%" y="485" width="0.8258%" height="15" fill="rgb(237,72,25)" fg:x="130" fg:w="11"/><text x="10.0098%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.83%)</title><rect x="9.7598%" y="469" width="0.8258%" height="15" fill="rgb(244,70,9)" fg:x="130" fg:w="11"/><text x="10.0098%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.60%)</title><rect x="9.9850%" y="453" width="0.6006%" height="15" fill="rgb(217,125,39)" fg:x="133" fg:w="8"/><text x="10.2350%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.53%)</title><rect x="10.0601%" y="437" width="0.5255%" height="15" fill="rgb(235,36,10)" fg:x="134" fg:w="7"/><text x="10.3101%" y="447.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (7 samples, 0.53%)</title><rect x="10.0601%" y="421" width="0.5255%" height="15" fill="rgb(251,123,47)" fg:x="134" fg:w="7"/><text x="10.3101%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (7 samples, 0.53%)</title><rect x="10.0601%" y="405" width="0.5255%" height="15" fill="rgb(221,13,13)" fg:x="134" fg:w="7"/><text x="10.3101%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (7 samples, 0.53%)</title><rect x="10.0601%" y="389" width="0.5255%" height="15" fill="rgb(238,131,9)" fg:x="134" fg:w="7"/><text x="10.3101%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.53%)</title><rect x="10.0601%" y="373" width="0.5255%" height="15" fill="rgb(211,50,8)" fg:x="134" fg:w="7"/><text x="10.3101%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.53%)</title><rect x="10.0601%" y="357" width="0.5255%" height="15" fill="rgb(245,182,24)" fg:x="134" fg:w="7"/><text x="10.3101%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.53%)</title><rect x="10.0601%" y="341" width="0.5255%" height="15" fill="rgb(242,14,37)" fg:x="134" fg:w="7"/><text x="10.3101%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.53%)</title><rect x="10.0601%" y="325" width="0.5255%" height="15" fill="rgb(246,228,12)" fg:x="134" fg:w="7"/><text x="10.3101%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="10.5105%" y="309" width="0.0751%" height="15" fill="rgb(213,55,15)" fg:x="140" fg:w="1"/><text x="10.7605%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="10.5105%" y="293" width="0.0751%" height="15" fill="rgb(209,9,3)" fg:x="140" fg:w="1"/><text x="10.7605%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="10.5105%" y="277" width="0.0751%" height="15" fill="rgb(230,59,30)" fg:x="140" fg:w="1"/><text x="10.7605%" y="287.50"></text></g><g><title>std::fs::File::open (8 samples, 0.60%)</title><rect x="10.5856%" y="613" width="0.6006%" height="15" fill="rgb(209,121,21)" fg:x="141" fg:w="8"/><text x="10.8356%" y="623.50"></text></g><g><title>std::fs::OpenOptions::open (8 samples, 0.60%)</title><rect x="10.5856%" y="597" width="0.6006%" height="15" fill="rgb(220,109,13)" fg:x="141" fg:w="8"/><text x="10.8356%" y="607.50"></text></g><g><title>std::fs::OpenOptions::_open (8 samples, 0.60%)</title><rect x="10.5856%" y="581" width="0.6006%" height="15" fill="rgb(232,18,1)" fg:x="141" fg:w="8"/><text x="10.8356%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::open (8 samples, 0.60%)</title><rect x="10.5856%" y="565" width="0.6006%" height="15" fill="rgb(215,41,42)" fg:x="141" fg:w="8"/><text x="10.8356%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (8 samples, 0.60%)</title><rect x="10.5856%" y="549" width="0.6006%" height="15" fill="rgb(224,123,36)" fg:x="141" fg:w="8"/><text x="10.8356%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (8 samples, 0.60%)</title><rect x="10.5856%" y="533" width="0.6006%" height="15" fill="rgb(240,125,3)" fg:x="141" fg:w="8"/><text x="10.8356%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (8 samples, 0.60%)</title><rect x="10.5856%" y="517" width="0.6006%" height="15" fill="rgb(205,98,50)" fg:x="141" fg:w="8"/><text x="10.8356%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::open_c (8 samples, 0.60%)</title><rect x="10.5856%" y="501" width="0.6006%" height="15" fill="rgb(205,185,37)" fg:x="141" fg:w="8"/><text x="10.8356%" y="511.50"></text></g><g><title>std::sys::unix::cvt_r (8 samples, 0.60%)</title><rect x="10.5856%" y="485" width="0.6006%" height="15" fill="rgb(238,207,15)" fg:x="141" fg:w="8"/><text x="10.8356%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (8 samples, 0.60%)</title><rect x="10.5856%" y="469" width="0.6006%" height="15" fill="rgb(213,199,42)" fg:x="141" fg:w="8"/><text x="10.8356%" y="479.50"></text></g><g><title>__libc_open64 (8 samples, 0.60%)</title><rect x="10.5856%" y="453" width="0.6006%" height="15" fill="rgb(235,201,11)" fg:x="141" fg:w="8"/><text x="10.8356%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="437" width="0.6006%" height="15" fill="rgb(207,46,11)" fg:x="141" fg:w="8"/><text x="10.8356%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="421" width="0.6006%" height="15" fill="rgb(241,35,35)" fg:x="141" fg:w="8"/><text x="10.8356%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="405" width="0.6006%" height="15" fill="rgb(243,32,47)" fg:x="141" fg:w="8"/><text x="10.8356%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="389" width="0.6006%" height="15" fill="rgb(247,202,23)" fg:x="141" fg:w="8"/><text x="10.8356%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="373" width="0.6006%" height="15" fill="rgb(219,102,11)" fg:x="141" fg:w="8"/><text x="10.8356%" y="383.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="357" width="0.6006%" height="15" fill="rgb(243,110,44)" fg:x="141" fg:w="8"/><text x="10.8356%" y="367.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="341" width="0.6006%" height="15" fill="rgb(222,74,54)" fg:x="141" fg:w="8"/><text x="10.8356%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="325" width="0.6006%" height="15" fill="rgb(216,99,12)" fg:x="141" fg:w="8"/><text x="10.8356%" y="335.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="309" width="0.6006%" height="15" fill="rgb(226,22,26)" fg:x="141" fg:w="8"/><text x="10.8356%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="10.5856%" y="293" width="0.6006%" height="15" fill="rgb(217,163,10)" fg:x="141" fg:w="8"/><text x="10.8356%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="10.6607%" y="277" width="0.5255%" height="15" fill="rgb(213,25,53)" fg:x="142" fg:w="7"/><text x="10.9107%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="10.6607%" y="261" width="0.5255%" height="15" fill="rgb(252,105,26)" fg:x="142" fg:w="7"/><text x="10.9107%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="10.6607%" y="245" width="0.5255%" height="15" fill="rgb(220,39,43)" fg:x="142" fg:w="7"/><text x="10.9107%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="10.6607%" y="229" width="0.5255%" height="15" fill="rgb(229,68,48)" fg:x="142" fg:w="7"/><text x="10.9107%" y="239.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="10.6607%" y="213" width="0.5255%" height="15" fill="rgb(252,8,32)" fg:x="142" fg:w="7"/><text x="10.9107%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="10.7357%" y="197" width="0.4505%" height="15" fill="rgb(223,20,43)" fg:x="143" fg:w="6"/><text x="10.9857%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="10.7357%" y="181" width="0.4505%" height="15" fill="rgb(229,81,49)" fg:x="143" fg:w="6"/><text x="10.9857%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="10.7357%" y="165" width="0.4505%" height="15" fill="rgb(236,28,36)" fg:x="143" fg:w="6"/><text x="10.9857%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="10.7357%" y="149" width="0.4505%" height="15" fill="rgb(249,185,26)" fg:x="143" fg:w="6"/><text x="10.9857%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="10.7357%" y="133" width="0.4505%" height="15" fill="rgb(249,174,33)" fg:x="143" fg:w="6"/><text x="10.9857%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="10.7357%" y="117" width="0.4505%" height="15" fill="rgb(233,201,37)" fg:x="143" fg:w="6"/><text x="10.9857%" y="127.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="10.7357%" y="101" width="0.4505%" height="15" fill="rgb(221,78,26)" fg:x="143" fg:w="6"/><text x="10.9857%" y="111.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="10.8108%" y="85" width="0.3754%" height="15" fill="rgb(250,127,30)" fg:x="144" fg:w="5"/><text x="11.0608%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="10.8108%" y="69" width="0.3754%" height="15" fill="rgb(230,49,44)" fg:x="144" fg:w="5"/><text x="11.0608%" y="79.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="10.8108%" y="53" width="0.3754%" height="15" fill="rgb(229,67,23)" fg:x="144" fg:w="5"/><text x="11.0608%" y="63.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="10.8108%" y="37" width="0.3754%" height="15" fill="rgb(249,83,47)" fg:x="144" fg:w="5"/><text x="11.0608%" y="47.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (30 samples, 2.25%)</title><rect x="9.0090%" y="677" width="2.2523%" height="15" fill="rgb(215,43,3)" fg:x="120" fg:w="30"/><text x="9.2590%" y="687.50">l..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (25 samples, 1.88%)</title><rect x="9.3844%" y="661" width="1.8769%" height="15" fill="rgb(238,154,13)" fg:x="125" fg:w="25"/><text x="9.6344%" y="671.50">l..</text></g><g><title>std::fs::read_to_string (9 samples, 0.68%)</title><rect x="10.5856%" y="645" width="0.6757%" height="15" fill="rgb(219,56,2)" fg:x="141" fg:w="9"/><text x="10.8356%" y="655.50"></text></g><g><title>std::fs::read_to_string::inner (9 samples, 0.68%)</title><rect x="10.5856%" y="629" width="0.6757%" height="15" fill="rgb(233,0,4)" fg:x="141" fg:w="9"/><text x="10.8356%" y="639.50"></text></g><g><title>std::io::default_read_to_string (1 samples, 0.08%)</title><rect x="11.1862%" y="613" width="0.0751%" height="15" fill="rgb(235,30,7)" fg:x="149" fg:w="1"/><text x="11.4362%" y="623.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.08%)</title><rect x="11.1862%" y="597" width="0.0751%" height="15" fill="rgb(250,79,13)" fg:x="149" fg:w="1"/><text x="11.4362%" y="607.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.08%)</title><rect x="11.1862%" y="581" width="0.0751%" height="15" fill="rgb(211,146,34)" fg:x="149" fg:w="1"/><text x="11.4362%" y="591.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.08%)</title><rect x="11.1862%" y="565" width="0.0751%" height="15" fill="rgb(228,22,38)" fg:x="149" fg:w="1"/><text x="11.4362%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.08%)</title><rect x="11.2613%" y="661" width="0.0751%" height="15" fill="rgb(235,168,5)" fg:x="150" fg:w="1"/><text x="11.5113%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.08%)</title><rect x="11.2613%" y="645" width="0.0751%" height="15" fill="rgb(221,155,16)" fg:x="150" fg:w="1"/><text x="11.5113%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.2613%" y="629" width="0.0751%" height="15" fill="rgb(215,215,53)" fg:x="150" fg:w="1"/><text x="11.5113%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.2613%" y="613" width="0.0751%" height="15" fill="rgb(223,4,10)" fg:x="150" fg:w="1"/><text x="11.5113%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.2613%" y="597" width="0.0751%" height="15" fill="rgb(234,103,6)" fg:x="150" fg:w="1"/><text x="11.5113%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.2613%" y="581" width="0.0751%" height="15" fill="rgb(227,97,0)" fg:x="150" fg:w="1"/><text x="11.5113%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.2613%" y="565" width="0.0751%" height="15" fill="rgb(234,150,53)" fg:x="150" fg:w="1"/><text x="11.5113%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.2613%" y="549" width="0.0751%" height="15" fill="rgb(228,201,54)" fg:x="150" fg:w="1"/><text x="11.5113%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.2613%" y="533" width="0.0751%" height="15" fill="rgb(222,22,37)" fg:x="150" fg:w="1"/><text x="11.5113%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.2613%" y="517" width="0.0751%" height="15" fill="rgb(237,53,32)" fg:x="150" fg:w="1"/><text x="11.5113%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.2613%" y="501" width="0.0751%" height="15" fill="rgb(233,25,53)" fg:x="150" fg:w="1"/><text x="11.5113%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.2613%" y="485" width="0.0751%" height="15" fill="rgb(210,40,34)" fg:x="150" fg:w="1"/><text x="11.5113%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="11.2613%" y="469" width="0.0751%" height="15" fill="rgb(241,220,44)" fg:x="150" fg:w="1"/><text x="11.5113%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="11.2613%" y="453" width="0.0751%" height="15" fill="rgb(235,28,35)" fg:x="150" fg:w="1"/><text x="11.5113%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (47 samples, 3.53%)</title><rect x="14.7898%" y="533" width="3.5285%" height="15" fill="rgb(210,56,17)" fg:x="197" fg:w="47"/><text x="15.0398%" y="543.50">cor..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (47 samples, 3.53%)</title><rect x="14.7898%" y="517" width="3.5285%" height="15" fill="rgb(224,130,29)" fg:x="197" fg:w="47"/><text x="15.0398%" y="527.50">cor..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (47 samples, 3.53%)</title><rect x="14.7898%" y="501" width="3.5285%" height="15" fill="rgb(235,212,8)" fg:x="197" fg:w="47"/><text x="15.0398%" y="511.50">&lt;[A..</text></g><g><title>__memcmp_avx2_movbe (47 samples, 3.53%)</title><rect x="14.7898%" y="485" width="3.5285%" height="15" fill="rgb(223,33,50)" fg:x="197" fg:w="47"/><text x="15.0398%" y="495.50">__m..</text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="18.1682%" y="469" width="0.1502%" height="15" fill="rgb(219,149,13)" fg:x="242" fg:w="2"/><text x="18.4182%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="18.1682%" y="453" width="0.1502%" height="15" fill="rgb(250,156,29)" fg:x="242" fg:w="2"/><text x="18.4182%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="18.1682%" y="437" width="0.1502%" height="15" fill="rgb(216,193,19)" fg:x="242" fg:w="2"/><text x="18.4182%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="18.1682%" y="421" width="0.1502%" height="15" fill="rgb(216,135,14)" fg:x="242" fg:w="2"/><text x="18.4182%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="18.1682%" y="405" width="0.1502%" height="15" fill="rgb(241,47,5)" fg:x="242" fg:w="2"/><text x="18.4182%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="18.1682%" y="389" width="0.1502%" height="15" fill="rgb(233,42,35)" fg:x="242" fg:w="2"/><text x="18.4182%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="18.1682%" y="373" width="0.1502%" height="15" fill="rgb(231,13,6)" fg:x="242" fg:w="2"/><text x="18.4182%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="18.1682%" y="357" width="0.1502%" height="15" fill="rgb(207,181,40)" fg:x="242" fg:w="2"/><text x="18.4182%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="18.2432%" y="341" width="0.0751%" height="15" fill="rgb(254,173,49)" fg:x="243" fg:w="1"/><text x="18.4932%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="18.2432%" y="325" width="0.0751%" height="15" fill="rgb(221,1,38)" fg:x="243" fg:w="1"/><text x="18.4932%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="18.2432%" y="309" width="0.0751%" height="15" fill="rgb(206,124,46)" fg:x="243" fg:w="1"/><text x="18.4932%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="18.2432%" y="293" width="0.0751%" height="15" fill="rgb(249,21,11)" fg:x="243" fg:w="1"/><text x="18.4932%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (11 samples, 0.83%)</title><rect x="18.3183%" y="533" width="0.8258%" height="15" fill="rgb(222,201,40)" fg:x="244" fg:w="11"/><text x="18.5683%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (11 samples, 0.83%)</title><rect x="18.3183%" y="517" width="0.8258%" height="15" fill="rgb(235,61,29)" fg:x="244" fg:w="11"/><text x="18.5683%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="501" width="0.1502%" height="15" fill="rgb(219,207,3)" fg:x="316" fg:w="2"/><text x="23.9737%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="485" width="0.1502%" height="15" fill="rgb(222,56,46)" fg:x="316" fg:w="2"/><text x="23.9737%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="469" width="0.1502%" height="15" fill="rgb(239,76,54)" fg:x="316" fg:w="2"/><text x="23.9737%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="453" width="0.1502%" height="15" fill="rgb(231,124,27)" fg:x="316" fg:w="2"/><text x="23.9737%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="437" width="0.1502%" height="15" fill="rgb(249,195,6)" fg:x="316" fg:w="2"/><text x="23.9737%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="421" width="0.1502%" height="15" fill="rgb(237,174,47)" fg:x="316" fg:w="2"/><text x="23.9737%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="405" width="0.1502%" height="15" fill="rgb(206,201,31)" fg:x="316" fg:w="2"/><text x="23.9737%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="389" width="0.1502%" height="15" fill="rgb(231,57,52)" fg:x="316" fg:w="2"/><text x="23.9737%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="23.7237%" y="373" width="0.1502%" height="15" fill="rgb(248,177,22)" fg:x="316" fg:w="2"/><text x="23.9737%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7988%" y="357" width="0.0751%" height="15" fill="rgb(215,211,37)" fg:x="317" fg:w="1"/><text x="24.0488%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::repeat_u8 (7 samples, 0.53%)</title><rect x="23.8739%" y="501" width="0.5255%" height="15" fill="rgb(241,128,51)" fg:x="318" fg:w="7"/><text x="24.1239%" y="511.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (15 samples, 1.13%)</title><rect x="24.3994%" y="501" width="1.1261%" height="15" fill="rgb(227,165,31)" fg:x="325" fg:w="15"/><text x="24.6494%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (9 samples, 0.68%)</title><rect x="24.8498%" y="485" width="0.6757%" height="15" fill="rgb(228,167,24)" fg:x="331" fg:w="9"/><text x="25.0998%" y="495.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (282 samples, 21.17%)</title><rect x="11.3363%" y="613" width="21.1712%" height="15" fill="rgb(228,143,12)" fg:x="151" fg:w="282"/><text x="11.5863%" y="623.50">&lt;core::str::iter::Lines as core::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (282 samples, 21.17%)</title><rect x="11.3363%" y="597" width="21.1712%" height="15" fill="rgb(249,149,8)" fg:x="151" fg:w="282"/><text x="11.5863%" y="607.50">&lt;core::iter::adapters::map::Map&lt;I..</text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (282 samples, 21.17%)</title><rect x="11.3363%" y="581" width="21.1712%" height="15" fill="rgb(243,35,44)" fg:x="151" fg:w="282"/><text x="11.5863%" y="591.50">&lt;core::str::iter::SplitInclusive&lt;..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (282 samples, 21.17%)</title><rect x="11.3363%" y="565" width="21.1712%" height="15" fill="rgb(246,89,9)" fg:x="151" fg:w="282"/><text x="11.5863%" y="575.50">core::str::iter::SplitInternal&lt;P&gt;..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (277 samples, 20.80%)</title><rect x="11.7117%" y="549" width="20.7958%" height="15" fill="rgb(233,213,13)" fg:x="156" fg:w="277"/><text x="11.9617%" y="559.50">&lt;core::str::pattern::CharSearcher..</text></g><g><title>core::slice::memchr::memchr (178 samples, 13.36%)</title><rect x="19.1441%" y="533" width="13.3634%" height="15" fill="rgb(233,141,41)" fg:x="255" fg:w="178"/><text x="19.3941%" y="543.50">core::slice::memchr:..</text></g><g><title>core::slice::memchr::memchr_aligned (171 samples, 12.84%)</title><rect x="19.6697%" y="517" width="12.8378%" height="15" fill="rgb(239,167,4)" fg:x="262" fg:w="171"/><text x="19.9197%" y="527.50">core::slice::memchr..</text></g><g><title>core::slice::memchr::memchr_naive (93 samples, 6.98%)</title><rect x="25.5255%" y="501" width="6.9820%" height="15" fill="rgb(209,217,16)" fg:x="340" fg:w="93"/><text x="25.7755%" y="511.50">core::sli..</text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.4324%" y="485" width="0.0751%" height="15" fill="rgb(219,88,35)" fg:x="432" fg:w="1"/><text x="32.6824%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.4324%" y="469" width="0.0751%" height="15" fill="rgb(220,193,23)" fg:x="432" fg:w="1"/><text x="32.6824%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.4324%" y="453" width="0.0751%" height="15" fill="rgb(230,90,52)" fg:x="432" fg:w="1"/><text x="32.6824%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.4324%" y="437" width="0.0751%" height="15" fill="rgb(252,106,19)" fg:x="432" fg:w="1"/><text x="32.6824%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.4324%" y="421" width="0.0751%" height="15" fill="rgb(206,74,20)" fg:x="432" fg:w="1"/><text x="32.6824%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.4324%" y="405" width="0.0751%" height="15" fill="rgb(230,138,44)" fg:x="432" fg:w="1"/><text x="32.6824%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.4324%" y="389" width="0.0751%" height="15" fill="rgb(235,182,43)" fg:x="432" fg:w="1"/><text x="32.6824%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.4324%" y="373" width="0.0751%" height="15" fill="rgb(242,16,51)" fg:x="432" fg:w="1"/><text x="32.6824%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.08%)</title><rect x="32.6577%" y="581" width="0.0751%" height="15" fill="rgb(248,9,4)" fg:x="435" fg:w="1"/><text x="32.9077%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.08%)</title><rect x="32.6577%" y="565" width="0.0751%" height="15" fill="rgb(210,31,22)" fg:x="435" fg:w="1"/><text x="32.9077%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (286 samples, 21.47%)</title><rect x="11.3363%" y="661" width="21.4715%" height="15" fill="rgb(239,54,39)" fg:x="151" fg:w="286"/><text x="11.5863%" y="671.50">core::iter::traits::iterator::Iter..</text></g><g><title>&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (286 samples, 21.47%)</title><rect x="11.3363%" y="645" width="21.4715%" height="15" fill="rgb(230,99,41)" fg:x="151" fg:w="286"/><text x="11.5863%" y="655.50">&lt;core::iter::adapters::cycle::Cycl..</text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (286 samples, 21.47%)</title><rect x="11.3363%" y="629" width="21.4715%" height="15" fill="rgb(253,106,12)" fg:x="151" fg:w="286"/><text x="11.5863%" y="639.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.30%)</title><rect x="32.5075%" y="613" width="0.3003%" height="15" fill="rgb(213,46,41)" fg:x="433" fg:w="4"/><text x="32.7575%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.30%)</title><rect x="32.5075%" y="597" width="0.3003%" height="15" fill="rgb(215,133,35)" fg:x="433" fg:w="4"/><text x="32.7575%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.08%)</title><rect x="32.7327%" y="581" width="0.0751%" height="15" fill="rgb(213,28,5)" fg:x="436" fg:w="1"/><text x="32.9827%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="32.8078%" y="613" width="0.0751%" height="15" fill="rgb(215,77,49)" fg:x="437" fg:w="1"/><text x="33.0578%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="32.8078%" y="597" width="0.0751%" height="15" fill="rgb(248,100,22)" fg:x="437" fg:w="1"/><text x="33.0578%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.8078%" y="581" width="0.0751%" height="15" fill="rgb(208,67,9)" fg:x="437" fg:w="1"/><text x="33.0578%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.8078%" y="565" width="0.0751%" height="15" fill="rgb(219,133,21)" fg:x="437" fg:w="1"/><text x="33.0578%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.8078%" y="549" width="0.0751%" height="15" fill="rgb(246,46,29)" fg:x="437" fg:w="1"/><text x="33.0578%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="32.8078%" y="533" width="0.0751%" height="15" fill="rgb(246,185,52)" fg:x="437" fg:w="1"/><text x="33.0578%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="32.8078%" y="517" width="0.0751%" height="15" fill="rgb(252,136,11)" fg:x="437" fg:w="1"/><text x="33.0578%" y="527.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (6 samples, 0.45%)</title><rect x="32.8829%" y="613" width="0.4505%" height="15" fill="rgb(219,138,53)" fg:x="438" fg:w="6"/><text x="33.1329%" y="623.50"></text></g><g><title>__GI___sched_yield (6 samples, 0.45%)</title><rect x="32.8829%" y="597" width="0.4505%" height="15" fill="rgb(211,51,23)" fg:x="438" fg:w="6"/><text x="33.1329%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="32.8829%" y="581" width="0.4505%" height="15" fill="rgb(247,221,28)" fg:x="438" fg:w="6"/><text x="33.1329%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="32.8829%" y="565" width="0.4505%" height="15" fill="rgb(251,222,45)" fg:x="438" fg:w="6"/><text x="33.1329%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="32.8829%" y="549" width="0.4505%" height="15" fill="rgb(217,162,53)" fg:x="438" fg:w="6"/><text x="33.1329%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="32.8829%" y="533" width="0.4505%" height="15" fill="rgb(229,93,14)" fg:x="438" fg:w="6"/><text x="33.1329%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="32.8829%" y="517" width="0.4505%" height="15" fill="rgb(209,67,49)" fg:x="438" fg:w="6"/><text x="33.1329%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="32.8829%" y="501" width="0.4505%" height="15" fill="rgb(213,87,29)" fg:x="438" fg:w="6"/><text x="33.1329%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="32.8829%" y="485" width="0.4505%" height="15" fill="rgb(205,151,52)" fg:x="438" fg:w="6"/><text x="33.1329%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="32.8829%" y="469" width="0.4505%" height="15" fill="rgb(253,215,39)" fg:x="438" fg:w="6"/><text x="33.1329%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="32.9580%" y="453" width="0.3754%" height="15" fill="rgb(221,220,41)" fg:x="439" fg:w="5"/><text x="33.2080%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="32.9580%" y="437" width="0.3754%" height="15" fill="rgb(218,133,21)" fg:x="439" fg:w="5"/><text x="33.2080%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="32.9580%" y="421" width="0.3754%" height="15" fill="rgb(221,193,43)" fg:x="439" fg:w="5"/><text x="33.2080%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="32.9580%" y="405" width="0.3754%" height="15" fill="rgb(240,128,52)" fg:x="439" fg:w="5"/><text x="33.2080%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 1.05%)</title><rect x="33.3333%" y="597" width="1.0511%" height="15" fill="rgb(253,114,12)" fg:x="444" fg:w="14"/><text x="33.5833%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 1.05%)</title><rect x="33.3333%" y="581" width="1.0511%" height="15" fill="rgb(215,223,47)" fg:x="444" fg:w="14"/><text x="33.5833%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (14 samples, 1.05%)</title><rect x="33.3333%" y="565" width="1.0511%" height="15" fill="rgb(248,225,23)" fg:x="444" fg:w="14"/><text x="33.5833%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="549" width="0.0751%" height="15" fill="rgb(250,108,0)" fg:x="457" fg:w="1"/><text x="34.5593%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="533" width="0.0751%" height="15" fill="rgb(228,208,7)" fg:x="457" fg:w="1"/><text x="34.5593%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="517" width="0.0751%" height="15" fill="rgb(244,45,10)" fg:x="457" fg:w="1"/><text x="34.5593%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="501" width="0.0751%" height="15" fill="rgb(207,125,25)" fg:x="457" fg:w="1"/><text x="34.5593%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="485" width="0.0751%" height="15" fill="rgb(210,195,18)" fg:x="457" fg:w="1"/><text x="34.5593%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="469" width="0.0751%" height="15" fill="rgb(249,80,12)" fg:x="457" fg:w="1"/><text x="34.5593%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="453" width="0.0751%" height="15" fill="rgb(221,65,9)" fg:x="457" fg:w="1"/><text x="34.5593%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="437" width="0.0751%" height="15" fill="rgb(235,49,36)" fg:x="457" fg:w="1"/><text x="34.5593%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="421" width="0.0751%" height="15" fill="rgb(225,32,20)" fg:x="457" fg:w="1"/><text x="34.5593%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="405" width="0.0751%" height="15" fill="rgb(215,141,46)" fg:x="457" fg:w="1"/><text x="34.5593%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="389" width="0.0751%" height="15" fill="rgb(250,160,47)" fg:x="457" fg:w="1"/><text x="34.5593%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="373" width="0.0751%" height="15" fill="rgb(216,222,40)" fg:x="457" fg:w="1"/><text x="34.5593%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="357" width="0.0751%" height="15" fill="rgb(234,217,39)" fg:x="457" fg:w="1"/><text x="34.5593%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="341" width="0.0751%" height="15" fill="rgb(207,178,40)" fg:x="457" fg:w="1"/><text x="34.5593%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="325" width="0.0751%" height="15" fill="rgb(221,136,13)" fg:x="457" fg:w="1"/><text x="34.5593%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3093%" y="309" width="0.0751%" height="15" fill="rgb(249,199,10)" fg:x="457" fg:w="1"/><text x="34.5593%" y="319.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (34 samples, 2.55%)</title><rect x="32.8078%" y="629" width="2.5526%" height="15" fill="rgb(249,222,13)" fg:x="437" fg:w="34"/><text x="33.0578%" y="639.50">cr..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (27 samples, 2.03%)</title><rect x="33.3333%" y="613" width="2.0270%" height="15" fill="rgb(244,185,38)" fg:x="444" fg:w="27"/><text x="33.5833%" y="623.50">c..</text></g><g><title>core::sync::atomic::spin_loop_hint (13 samples, 0.98%)</title><rect x="34.3844%" y="597" width="0.9760%" height="15" fill="rgb(236,202,9)" fg:x="458" fg:w="13"/><text x="34.6344%" y="607.50"></text></g><g><title>core::hint::spin_loop (13 samples, 0.98%)</title><rect x="34.3844%" y="581" width="0.9760%" height="15" fill="rgb(250,229,37)" fg:x="458" fg:w="13"/><text x="34.6344%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13 samples, 0.98%)</title><rect x="34.3844%" y="565" width="0.9760%" height="15" fill="rgb(206,174,23)" fg:x="458" fg:w="13"/><text x="34.6344%" y="575.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (36 samples, 2.70%)</title><rect x="32.8078%" y="661" width="2.7027%" height="15" fill="rgb(211,33,43)" fg:x="437" fg:w="36"/><text x="33.0578%" y="671.50">cr..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (36 samples, 2.70%)</title><rect x="32.8078%" y="645" width="2.7027%" height="15" fill="rgb(245,58,50)" fg:x="437" fg:w="36"/><text x="33.0578%" y="655.50">cr..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (2 samples, 0.15%)</title><rect x="35.3604%" y="629" width="0.1502%" height="15" fill="rgb(244,68,36)" fg:x="471" fg:w="2"/><text x="35.6104%" y="639.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (2 samples, 0.15%)</title><rect x="35.3604%" y="613" width="0.1502%" height="15" fill="rgb(232,229,15)" fg:x="471" fg:w="2"/><text x="35.6104%" y="623.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (2 samples, 0.15%)</title><rect x="35.3604%" y="597" width="0.1502%" height="15" fill="rgb(254,30,23)" fg:x="471" fg:w="2"/><text x="35.6104%" y="607.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (2 samples, 0.15%)</title><rect x="35.3604%" y="581" width="0.1502%" height="15" fill="rgb(235,160,14)" fg:x="471" fg:w="2"/><text x="35.6104%" y="591.50"></text></g><g><title>__GI___sched_yield (2 samples, 0.15%)</title><rect x="35.3604%" y="565" width="0.1502%" height="15" fill="rgb(212,155,44)" fg:x="471" fg:w="2"/><text x="35.6104%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="35.3604%" y="549" width="0.1502%" height="15" fill="rgb(226,2,50)" fg:x="471" fg:w="2"/><text x="35.6104%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4354%" y="533" width="0.0751%" height="15" fill="rgb(234,177,6)" fg:x="472" fg:w="1"/><text x="35.6854%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4354%" y="517" width="0.0751%" height="15" fill="rgb(217,24,9)" fg:x="472" fg:w="1"/><text x="35.6854%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4354%" y="501" width="0.0751%" height="15" fill="rgb(220,13,46)" fg:x="472" fg:w="1"/><text x="35.6854%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4354%" y="485" width="0.0751%" height="15" fill="rgb(239,221,27)" fg:x="472" fg:w="1"/><text x="35.6854%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4354%" y="469" width="0.0751%" height="15" fill="rgb(222,198,25)" fg:x="472" fg:w="1"/><text x="35.6854%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4354%" y="453" width="0.0751%" height="15" fill="rgb(211,99,13)" fg:x="472" fg:w="1"/><text x="35.6854%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="35.5105%" y="645" width="0.0751%" height="15" fill="rgb(232,111,31)" fg:x="473" fg:w="1"/><text x="35.7605%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.5105%" y="629" width="0.0751%" height="15" fill="rgb(245,82,37)" fg:x="473" fg:w="1"/><text x="35.7605%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.5105%" y="613" width="0.0751%" height="15" fill="rgb(227,149,46)" fg:x="473" fg:w="1"/><text x="35.7605%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.5105%" y="597" width="0.0751%" height="15" fill="rgb(218,36,50)" fg:x="473" fg:w="1"/><text x="35.7605%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="35.5105%" y="581" width="0.0751%" height="15" fill="rgb(226,80,48)" fg:x="473" fg:w="1"/><text x="35.7605%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.5105%" y="565" width="0.0751%" height="15" fill="rgb(238,224,15)" fg:x="473" fg:w="1"/><text x="35.7605%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.5105%" y="549" width="0.0751%" height="15" fill="rgb(241,136,10)" fg:x="473" fg:w="1"/><text x="35.7605%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.5105%" y="533" width="0.0751%" height="15" fill="rgb(208,32,45)" fg:x="473" fg:w="1"/><text x="35.7605%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.5105%" y="517" width="0.0751%" height="15" fill="rgb(207,135,9)" fg:x="473" fg:w="1"/><text x="35.7605%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.5105%" y="501" width="0.0751%" height="15" fill="rgb(206,86,44)" fg:x="473" fg:w="1"/><text x="35.7605%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.5105%" y="485" width="0.0751%" height="15" fill="rgb(245,177,15)" fg:x="473" fg:w="1"/><text x="35.7605%" y="495.50"></text></g><g><title>__rust_alloc (1 samples, 0.08%)</title><rect x="35.5105%" y="469" width="0.0751%" height="15" fill="rgb(206,64,50)" fg:x="473" fg:w="1"/><text x="35.7605%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (1 samples, 0.08%)</title><rect x="35.5856%" y="645" width="0.0751%" height="15" fill="rgb(234,36,40)" fg:x="474" fg:w="1"/><text x="35.8356%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.08%)</title><rect x="35.5856%" y="629" width="0.0751%" height="15" fill="rgb(213,64,8)" fg:x="474" fg:w="1"/><text x="35.8356%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="35.5856%" y="613" width="0.0751%" height="15" fill="rgb(210,75,36)" fg:x="474" fg:w="1"/><text x="35.8356%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="35.5856%" y="597" width="0.0751%" height="15" fill="rgb(229,88,21)" fg:x="474" fg:w="1"/><text x="35.8356%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.5856%" y="581" width="0.0751%" height="15" fill="rgb(252,204,47)" fg:x="474" fg:w="1"/><text x="35.8356%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="35.5856%" y="565" width="0.0751%" height="15" fill="rgb(208,77,27)" fg:x="474" fg:w="1"/><text x="35.8356%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="35.5856%" y="549" width="0.0751%" height="15" fill="rgb(221,76,26)" fg:x="474" fg:w="1"/><text x="35.8356%" y="559.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="35.5856%" y="533" width="0.0751%" height="15" fill="rgb(225,139,18)" fg:x="474" fg:w="1"/><text x="35.8356%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="35.6607%" y="453" width="0.2252%" height="15" fill="rgb(230,137,11)" fg:x="475" fg:w="3"/><text x="35.9107%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.23%)</title><rect x="35.6607%" y="437" width="0.2252%" height="15" fill="rgb(212,28,1)" fg:x="475" fg:w="3"/><text x="35.9107%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="35.6607%" y="421" width="0.2252%" height="15" fill="rgb(248,164,17)" fg:x="475" fg:w="3"/><text x="35.9107%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="35.6607%" y="405" width="0.2252%" height="15" fill="rgb(222,171,42)" fg:x="475" fg:w="3"/><text x="35.9107%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="35.6607%" y="389" width="0.2252%" height="15" fill="rgb(243,84,45)" fg:x="475" fg:w="3"/><text x="35.9107%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.23%)</title><rect x="35.6607%" y="373" width="0.2252%" height="15" fill="rgb(252,49,23)" fg:x="475" fg:w="3"/><text x="35.9107%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (3 samples, 0.23%)</title><rect x="35.6607%" y="357" width="0.2252%" height="15" fill="rgb(215,19,7)" fg:x="475" fg:w="3"/><text x="35.9107%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.15%)</title><rect x="35.7357%" y="341" width="0.1502%" height="15" fill="rgb(238,81,41)" fg:x="476" fg:w="2"/><text x="35.9857%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (2 samples, 0.15%)</title><rect x="35.7357%" y="325" width="0.1502%" height="15" fill="rgb(210,199,37)" fg:x="476" fg:w="2"/><text x="35.9857%" y="335.50"></text></g><g><title>hex::val (1 samples, 0.08%)</title><rect x="35.8108%" y="309" width="0.0751%" height="15" fill="rgb(244,192,49)" fg:x="477" fg:w="1"/><text x="36.0608%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="35.8859%" y="453" width="0.0751%" height="15" fill="rgb(226,211,11)" fg:x="478" fg:w="1"/><text x="36.1359%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.45%)</title><rect x="35.6607%" y="485" width="0.4505%" height="15" fill="rgb(236,162,54)" fg:x="475" fg:w="6"/><text x="35.9107%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.45%)</title><rect x="35.6607%" y="469" width="0.4505%" height="15" fill="rgb(220,229,9)" fg:x="475" fg:w="6"/><text x="35.9107%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="35.9610%" y="453" width="0.1502%" height="15" fill="rgb(250,87,22)" fg:x="479" fg:w="2"/><text x="36.2110%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="35.9610%" y="437" width="0.1502%" height="15" fill="rgb(239,43,17)" fg:x="479" fg:w="2"/><text x="36.2110%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.0360%" y="421" width="0.0751%" height="15" fill="rgb(231,177,25)" fg:x="480" fg:w="1"/><text x="36.2860%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="36.0360%" y="405" width="0.0751%" height="15" fill="rgb(219,179,1)" fg:x="480" fg:w="1"/><text x="36.2860%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.0360%" y="389" width="0.0751%" height="15" fill="rgb(238,219,53)" fg:x="480" fg:w="1"/><text x="36.2860%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="36.0360%" y="373" width="0.0751%" height="15" fill="rgb(232,167,36)" fg:x="480" fg:w="1"/><text x="36.2860%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="36.0360%" y="357" width="0.0751%" height="15" fill="rgb(244,19,51)" fg:x="480" fg:w="1"/><text x="36.2860%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="36.0360%" y="341" width="0.0751%" height="15" fill="rgb(224,6,22)" fg:x="480" fg:w="1"/><text x="36.2860%" y="351.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="36.0360%" y="325" width="0.0751%" height="15" fill="rgb(224,145,5)" fg:x="480" fg:w="1"/><text x="36.2860%" y="335.50"></text></g><g><title>hex::decode (7 samples, 0.53%)</title><rect x="35.6607%" y="645" width="0.5255%" height="15" fill="rgb(234,130,49)" fg:x="475" fg:w="7"/><text x="35.9107%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (7 samples, 0.53%)</title><rect x="35.6607%" y="629" width="0.5255%" height="15" fill="rgb(254,6,2)" fg:x="475" fg:w="7"/><text x="35.9107%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.53%)</title><rect x="35.6607%" y="613" width="0.5255%" height="15" fill="rgb(208,96,46)" fg:x="475" fg:w="7"/><text x="35.9107%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7 samples, 0.53%)</title><rect x="35.6607%" y="597" width="0.5255%" height="15" fill="rgb(239,3,39)" fg:x="475" fg:w="7"/><text x="35.9107%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.53%)</title><rect x="35.6607%" y="581" width="0.5255%" height="15" fill="rgb(233,210,1)" fg:x="475" fg:w="7"/><text x="35.9107%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (7 samples, 0.53%)</title><rect x="35.6607%" y="565" width="0.5255%" height="15" fill="rgb(244,137,37)" fg:x="475" fg:w="7"/><text x="35.9107%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.53%)</title><rect x="35.6607%" y="549" width="0.5255%" height="15" fill="rgb(240,136,2)" fg:x="475" fg:w="7"/><text x="35.9107%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.53%)</title><rect x="35.6607%" y="533" width="0.5255%" height="15" fill="rgb(239,18,37)" fg:x="475" fg:w="7"/><text x="35.9107%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.53%)</title><rect x="35.6607%" y="517" width="0.5255%" height="15" fill="rgb(218,185,22)" fg:x="475" fg:w="7"/><text x="35.9107%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.53%)</title><rect x="35.6607%" y="501" width="0.5255%" height="15" fill="rgb(225,218,4)" fg:x="475" fg:w="7"/><text x="35.9107%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="36.1111%" y="485" width="0.0751%" height="15" fill="rgb(230,182,32)" fg:x="481" fg:w="1"/><text x="36.3611%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1111%" y="469" width="0.0751%" height="15" fill="rgb(242,56,43)" fg:x="481" fg:w="1"/><text x="36.3611%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1111%" y="453" width="0.0751%" height="15" fill="rgb(233,99,24)" fg:x="481" fg:w="1"/><text x="36.3611%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.1111%" y="437" width="0.0751%" height="15" fill="rgb(234,209,42)" fg:x="481" fg:w="1"/><text x="36.3611%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.1111%" y="421" width="0.0751%" height="15" fill="rgb(227,7,12)" fg:x="481" fg:w="1"/><text x="36.3611%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.1111%" y="405" width="0.0751%" height="15" fill="rgb(245,203,43)" fg:x="481" fg:w="1"/><text x="36.3611%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.1111%" y="389" width="0.0751%" height="15" fill="rgb(238,205,33)" fg:x="481" fg:w="1"/><text x="36.3611%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.08%)</title><rect x="36.1111%" y="373" width="0.0751%" height="15" fill="rgb(231,56,7)" fg:x="481" fg:w="1"/><text x="36.3611%" y="383.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="36.1862%" y="549" width="0.0751%" height="15" fill="rgb(244,186,29)" fg:x="482" fg:w="1"/><text x="36.4362%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="36.2613%" y="453" width="0.0751%" height="15" fill="rgb(234,111,31)" fg:x="483" fg:w="1"/><text x="36.5113%" y="463.50"></text></g><g><title>alloc::string::String::reserve (2 samples, 0.15%)</title><rect x="36.2613%" y="549" width="0.1502%" height="15" fill="rgb(241,149,10)" fg:x="483" fg:w="2"/><text x="36.5113%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="36.2613%" y="533" width="0.1502%" height="15" fill="rgb(249,206,44)" fg:x="483" fg:w="2"/><text x="36.5113%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="36.2613%" y="517" width="0.1502%" height="15" fill="rgb(251,153,30)" fg:x="483" fg:w="2"/><text x="36.5113%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="36.2613%" y="501" width="0.1502%" height="15" fill="rgb(239,152,38)" fg:x="483" fg:w="2"/><text x="36.5113%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="36.2613%" y="485" width="0.1502%" height="15" fill="rgb(249,139,47)" fg:x="483" fg:w="2"/><text x="36.5113%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="36.2613%" y="469" width="0.1502%" height="15" fill="rgb(244,64,35)" fg:x="483" fg:w="2"/><text x="36.5113%" y="479.50"></text></g><g><title>__rust_alloc (1 samples, 0.08%)</title><rect x="36.3363%" y="453" width="0.0751%" height="15" fill="rgb(216,46,15)" fg:x="484" fg:w="1"/><text x="36.5863%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.08%)</title><rect x="36.4114%" y="453" width="0.0751%" height="15" fill="rgb(250,74,19)" fg:x="485" fg:w="1"/><text x="36.6614%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.08%)</title><rect x="36.4114%" y="437" width="0.0751%" height="15" fill="rgb(249,42,33)" fg:x="485" fg:w="1"/><text x="36.6614%" y="447.50"></text></g><g><title>lab4::checksum::Checksum::update (14 samples, 1.05%)</title><rect x="35.5105%" y="661" width="1.0511%" height="15" fill="rgb(242,149,17)" fg:x="473" fg:w="14"/><text x="35.7605%" y="671.50"></text></g><g><title>hex::encode (5 samples, 0.38%)</title><rect x="36.1862%" y="645" width="0.3754%" height="15" fill="rgb(244,29,21)" fg:x="482" fg:w="5"/><text x="36.4362%" y="655.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (5 samples, 0.38%)</title><rect x="36.1862%" y="629" width="0.3754%" height="15" fill="rgb(220,130,37)" fg:x="482" fg:w="5"/><text x="36.4362%" y="639.50"></text></g><g><title>hex::encode_to_iter (5 samples, 0.38%)</title><rect x="36.1862%" y="613" width="0.3754%" height="15" fill="rgb(211,67,2)" fg:x="482" fg:w="5"/><text x="36.4362%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.38%)</title><rect x="36.1862%" y="597" width="0.3754%" height="15" fill="rgb(235,68,52)" fg:x="482" fg:w="5"/><text x="36.4362%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (5 samples, 0.38%)</title><rect x="36.1862%" y="581" width="0.3754%" height="15" fill="rgb(246,142,3)" fg:x="482" fg:w="5"/><text x="36.4362%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (5 samples, 0.38%)</title><rect x="36.1862%" y="565" width="0.3754%" height="15" fill="rgb(241,25,7)" fg:x="482" fg:w="5"/><text x="36.4362%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.15%)</title><rect x="36.4114%" y="549" width="0.1502%" height="15" fill="rgb(242,119,39)" fg:x="485" fg:w="2"/><text x="36.6614%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.15%)</title><rect x="36.4114%" y="533" width="0.1502%" height="15" fill="rgb(241,98,45)" fg:x="485" fg:w="2"/><text x="36.6614%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.15%)</title><rect x="36.4114%" y="517" width="0.1502%" height="15" fill="rgb(254,28,30)" fg:x="485" fg:w="2"/><text x="36.6614%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (2 samples, 0.15%)</title><rect x="36.4114%" y="501" width="0.1502%" height="15" fill="rgb(241,142,54)" fg:x="485" fg:w="2"/><text x="36.6614%" y="511.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="36.4114%" y="485" width="0.1502%" height="15" fill="rgb(222,85,15)" fg:x="485" fg:w="2"/><text x="36.6614%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.15%)</title><rect x="36.4114%" y="469" width="0.1502%" height="15" fill="rgb(210,85,47)" fg:x="485" fg:w="2"/><text x="36.6614%" y="479.50"></text></g><g><title>core::ptr::write (1 samples, 0.08%)</title><rect x="36.4865%" y="453" width="0.0751%" height="15" fill="rgb(224,206,25)" fg:x="486" fg:w="1"/><text x="36.7365%" y="463.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.08%)</title><rect x="36.5616%" y="549" width="0.0751%" height="15" fill="rgb(243,201,19)" fg:x="487" fg:w="1"/><text x="36.8116%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="36.5616%" y="533" width="0.0751%" height="15" fill="rgb(236,59,4)" fg:x="487" fg:w="1"/><text x="36.8116%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="36.5616%" y="517" width="0.0751%" height="15" fill="rgb(254,179,45)" fg:x="487" fg:w="1"/><text x="36.8116%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.5616%" y="501" width="0.0751%" height="15" fill="rgb(226,14,10)" fg:x="487" fg:w="1"/><text x="36.8116%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="36.5616%" y="485" width="0.0751%" height="15" fill="rgb(244,27,41)" fg:x="487" fg:w="1"/><text x="36.8116%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.5616%" y="469" width="0.0751%" height="15" fill="rgb(235,35,32)" fg:x="487" fg:w="1"/><text x="36.8116%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="36.5616%" y="453" width="0.0751%" height="15" fill="rgb(218,68,31)" fg:x="487" fg:w="1"/><text x="36.8116%" y="463.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (2 samples, 0.15%)</title><rect x="36.5616%" y="661" width="0.1502%" height="15" fill="rgb(207,120,37)" fg:x="487" fg:w="2"/><text x="36.8116%" y="671.50"></text></g><g><title>hex::encode (2 samples, 0.15%)</title><rect x="36.5616%" y="645" width="0.1502%" height="15" fill="rgb(227,98,0)" fg:x="487" fg:w="2"/><text x="36.8116%" y="655.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (2 samples, 0.15%)</title><rect x="36.5616%" y="629" width="0.1502%" height="15" fill="rgb(207,7,3)" fg:x="487" fg:w="2"/><text x="36.8116%" y="639.50"></text></g><g><title>hex::encode_to_iter (2 samples, 0.15%)</title><rect x="36.5616%" y="613" width="0.1502%" height="15" fill="rgb(206,98,19)" fg:x="487" fg:w="2"/><text x="36.8116%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.15%)</title><rect x="36.5616%" y="597" width="0.1502%" height="15" fill="rgb(217,5,26)" fg:x="487" fg:w="2"/><text x="36.8116%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="36.5616%" y="581" width="0.1502%" height="15" fill="rgb(235,190,38)" fg:x="487" fg:w="2"/><text x="36.8116%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2 samples, 0.15%)</title><rect x="36.5616%" y="565" width="0.1502%" height="15" fill="rgb(247,86,24)" fg:x="487" fg:w="2"/><text x="36.8116%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.08%)</title><rect x="36.6366%" y="549" width="0.0751%" height="15" fill="rgb(205,101,16)" fg:x="488" fg:w="1"/><text x="36.8866%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="36.6366%" y="533" width="0.0751%" height="15" fill="rgb(246,168,33)" fg:x="488" fg:w="1"/><text x="36.8866%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.08%)</title><rect x="36.6366%" y="517" width="0.0751%" height="15" fill="rgb(231,114,1)" fg:x="488" fg:w="1"/><text x="36.8866%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1 samples, 0.08%)</title><rect x="36.6366%" y="501" width="0.0751%" height="15" fill="rgb(207,184,53)" fg:x="488" fg:w="1"/><text x="36.8866%" y="511.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.08%)</title><rect x="36.6366%" y="485" width="0.0751%" height="15" fill="rgb(224,95,51)" fg:x="488" fg:w="1"/><text x="36.8866%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="36.6366%" y="469" width="0.0751%" height="15" fill="rgb(212,188,45)" fg:x="488" fg:w="1"/><text x="36.8866%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7868%" y="469" width="0.0751%" height="15" fill="rgb(223,154,38)" fg:x="490" fg:w="1"/><text x="37.0368%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7868%" y="453" width="0.0751%" height="15" fill="rgb(251,22,52)" fg:x="490" fg:w="1"/><text x="37.0368%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7868%" y="437" width="0.0751%" height="15" fill="rgb(229,209,22)" fg:x="490" fg:w="1"/><text x="37.0368%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7868%" y="421" width="0.0751%" height="15" fill="rgb(234,138,34)" fg:x="490" fg:w="1"/><text x="37.0368%" y="431.50"></text></g><g><title>alloc::string::String::with_capacity (3 samples, 0.23%)</title><rect x="36.7117%" y="629" width="0.2252%" height="15" fill="rgb(212,95,11)" fg:x="489" fg:w="3"/><text x="36.9617%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="36.7117%" y="613" width="0.2252%" height="15" fill="rgb(240,179,47)" fg:x="489" fg:w="3"/><text x="36.9617%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="36.7117%" y="597" width="0.2252%" height="15" fill="rgb(240,163,11)" fg:x="489" fg:w="3"/><text x="36.9617%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="36.7117%" y="581" width="0.2252%" height="15" fill="rgb(236,37,12)" fg:x="489" fg:w="3"/><text x="36.9617%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.23%)</title><rect x="36.7117%" y="565" width="0.2252%" height="15" fill="rgb(232,164,16)" fg:x="489" fg:w="3"/><text x="36.9617%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.23%)</title><rect x="36.7117%" y="549" width="0.2252%" height="15" fill="rgb(244,205,15)" fg:x="489" fg:w="3"/><text x="36.9617%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="36.7117%" y="533" width="0.2252%" height="15" fill="rgb(223,117,47)" fg:x="489" fg:w="3"/><text x="36.9617%" y="543.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.23%)</title><rect x="36.7117%" y="517" width="0.2252%" height="15" fill="rgb(244,107,35)" fg:x="489" fg:w="3"/><text x="36.9617%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="36.7117%" y="501" width="0.2252%" height="15" fill="rgb(205,140,8)" fg:x="489" fg:w="3"/><text x="36.9617%" y="511.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="36.7868%" y="485" width="0.1502%" height="15" fill="rgb(228,84,46)" fg:x="490" fg:w="2"/><text x="37.0368%" y="495.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="36.8619%" y="469" width="0.0751%" height="15" fill="rgb(254,188,9)" fg:x="491" fg:w="1"/><text x="37.1119%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (4 samples, 0.30%)</title><rect x="36.9369%" y="629" width="0.3003%" height="15" fill="rgb(206,112,54)" fg:x="492" fg:w="4"/><text x="37.1869%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (4 samples, 0.30%)</title><rect x="36.9369%" y="613" width="0.3003%" height="15" fill="rgb(216,84,49)" fg:x="492" fg:w="4"/><text x="37.1869%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (4 samples, 0.30%)</title><rect x="36.9369%" y="597" width="0.3003%" height="15" fill="rgb(214,194,35)" fg:x="492" fg:w="4"/><text x="37.1869%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (4 samples, 0.30%)</title><rect x="36.9369%" y="581" width="0.3003%" height="15" fill="rgb(249,28,3)" fg:x="492" fg:w="4"/><text x="37.1869%" y="591.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (4 samples, 0.30%)</title><rect x="36.9369%" y="565" width="0.3003%" height="15" fill="rgb(222,56,52)" fg:x="492" fg:w="4"/><text x="37.1869%" y="575.50"></text></g><g><title>__close (4 samples, 0.30%)</title><rect x="36.9369%" y="549" width="0.3003%" height="15" fill="rgb(245,217,50)" fg:x="492" fg:w="4"/><text x="37.1869%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="36.9369%" y="533" width="0.3003%" height="15" fill="rgb(213,201,24)" fg:x="492" fg:w="4"/><text x="37.1869%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="37.0120%" y="517" width="0.2252%" height="15" fill="rgb(248,116,28)" fg:x="493" fg:w="3"/><text x="37.2620%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="37.0120%" y="501" width="0.2252%" height="15" fill="rgb(219,72,43)" fg:x="493" fg:w="3"/><text x="37.2620%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.1622%" y="485" width="0.0751%" height="15" fill="rgb(209,138,14)" fg:x="495" fg:w="1"/><text x="37.4122%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.1622%" y="469" width="0.0751%" height="15" fill="rgb(222,18,33)" fg:x="495" fg:w="1"/><text x="37.4122%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.1622%" y="453" width="0.0751%" height="15" fill="rgb(213,199,7)" fg:x="495" fg:w="1"/><text x="37.4122%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.1622%" y="437" width="0.0751%" height="15" fill="rgb(250,110,10)" fg:x="495" fg:w="1"/><text x="37.4122%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.1622%" y="421" width="0.0751%" height="15" fill="rgb(248,123,6)" fg:x="495" fg:w="1"/><text x="37.4122%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.1622%" y="405" width="0.0751%" height="15" fill="rgb(206,91,31)" fg:x="495" fg:w="1"/><text x="37.4122%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.1622%" y="389" width="0.0751%" height="15" fill="rgb(211,154,13)" fg:x="495" fg:w="1"/><text x="37.4122%" y="399.50"></text></g><g><title>std::fs::File::metadata (17 samples, 1.28%)</title><rect x="37.2372%" y="629" width="1.2763%" height="15" fill="rgb(225,148,7)" fg:x="496" fg:w="17"/><text x="37.4872%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (17 samples, 1.28%)</title><rect x="37.2372%" y="613" width="1.2763%" height="15" fill="rgb(220,160,43)" fg:x="496" fg:w="17"/><text x="37.4872%" y="623.50"></text></g><g><title>std::sys::unix::fs::try_statx (17 samples, 1.28%)</title><rect x="37.2372%" y="597" width="1.2763%" height="15" fill="rgb(213,52,39)" fg:x="496" fg:w="17"/><text x="37.4872%" y="607.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (17 samples, 1.28%)</title><rect x="37.2372%" y="581" width="1.2763%" height="15" fill="rgb(243,137,7)" fg:x="496" fg:w="17"/><text x="37.4872%" y="591.50"></text></g><g><title>statx (17 samples, 1.28%)</title><rect x="37.2372%" y="565" width="1.2763%" height="15" fill="rgb(230,79,13)" fg:x="496" fg:w="17"/><text x="37.4872%" y="575.50"></text></g><g><title>[unknown] (17 samples, 1.28%)</title><rect x="37.2372%" y="549" width="1.2763%" height="15" fill="rgb(247,105,23)" fg:x="496" fg:w="17"/><text x="37.4872%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.90%)</title><rect x="37.6126%" y="533" width="0.9009%" height="15" fill="rgb(223,179,41)" fg:x="501" fg:w="12"/><text x="37.8626%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="37.6877%" y="517" width="0.8258%" height="15" fill="rgb(218,9,34)" fg:x="502" fg:w="11"/><text x="37.9377%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="37.6877%" y="501" width="0.8258%" height="15" fill="rgb(222,106,8)" fg:x="502" fg:w="11"/><text x="37.9377%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="37.6877%" y="485" width="0.8258%" height="15" fill="rgb(211,220,0)" fg:x="502" fg:w="11"/><text x="37.9377%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="37.6877%" y="469" width="0.8258%" height="15" fill="rgb(229,52,16)" fg:x="502" fg:w="11"/><text x="37.9377%" y="479.50"></text></g><g><title>[unknown] (9 samples, 0.68%)</title><rect x="37.8378%" y="453" width="0.6757%" height="15" fill="rgb(212,155,18)" fg:x="504" fg:w="9"/><text x="38.0878%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="37.9129%" y="437" width="0.6006%" height="15" fill="rgb(242,21,14)" fg:x="505" fg:w="8"/><text x="38.1629%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="38.0631%" y="421" width="0.4505%" height="15" fill="rgb(222,19,48)" fg:x="507" fg:w="6"/><text x="38.3131%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="38.2883%" y="405" width="0.2252%" height="15" fill="rgb(232,45,27)" fg:x="510" fg:w="3"/><text x="38.5383%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.4384%" y="389" width="0.0751%" height="15" fill="rgb(249,103,42)" fg:x="512" fg:w="1"/><text x="38.6884%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.4384%" y="373" width="0.0751%" height="15" fill="rgb(246,81,33)" fg:x="512" fg:w="1"/><text x="38.6884%" y="383.50"></text></g><g><title>[unknown] (186 samples, 13.96%)</title><rect x="38.5886%" y="453" width="13.9640%" height="15" fill="rgb(252,33,42)" fg:x="514" fg:w="186"/><text x="38.8386%" y="463.50">[unknown]</text></g><g><title>[unknown] (185 samples, 13.89%)</title><rect x="38.6637%" y="437" width="13.8889%" height="15" fill="rgb(209,212,41)" fg:x="515" fg:w="185"/><text x="38.9137%" y="447.50">[unknown]</text></g><g><title>[unknown] (184 samples, 13.81%)</title><rect x="38.7387%" y="421" width="13.8138%" height="15" fill="rgb(207,154,6)" fg:x="516" fg:w="184"/><text x="38.9887%" y="431.50">[unknown]</text></g><g><title>[unknown] (182 samples, 13.66%)</title><rect x="38.8889%" y="405" width="13.6637%" height="15" fill="rgb(223,64,47)" fg:x="518" fg:w="182"/><text x="39.1389%" y="415.50">[unknown]</text></g><g><title>[unknown] (182 samples, 13.66%)</title><rect x="38.8889%" y="389" width="13.6637%" height="15" fill="rgb(211,161,38)" fg:x="518" fg:w="182"/><text x="39.1389%" y="399.50">[unknown]</text></g><g><title>[unknown] (182 samples, 13.66%)</title><rect x="38.8889%" y="373" width="13.6637%" height="15" fill="rgb(219,138,40)" fg:x="518" fg:w="182"/><text x="39.1389%" y="383.50">[unknown]</text></g><g><title>[unknown] (181 samples, 13.59%)</title><rect x="38.9640%" y="357" width="13.5886%" height="15" fill="rgb(241,228,46)" fg:x="519" fg:w="181"/><text x="39.2140%" y="367.50">[unknown]</text></g><g><title>[unknown] (180 samples, 13.51%)</title><rect x="39.0390%" y="341" width="13.5135%" height="15" fill="rgb(223,209,38)" fg:x="520" fg:w="180"/><text x="39.2890%" y="351.50">[unknown]</text></g><g><title>[unknown] (180 samples, 13.51%)</title><rect x="39.0390%" y="325" width="13.5135%" height="15" fill="rgb(236,164,45)" fg:x="520" fg:w="180"/><text x="39.2890%" y="335.50">[unknown]</text></g><g><title>[unknown] (180 samples, 13.51%)</title><rect x="39.0390%" y="309" width="13.5135%" height="15" fill="rgb(231,15,5)" fg:x="520" fg:w="180"/><text x="39.2890%" y="319.50">[unknown]</text></g><g><title>[unknown] (180 samples, 13.51%)</title><rect x="39.0390%" y="293" width="13.5135%" height="15" fill="rgb(252,35,15)" fg:x="520" fg:w="180"/><text x="39.2890%" y="303.50">[unknown]</text></g><g><title>[unknown] (176 samples, 13.21%)</title><rect x="39.3393%" y="277" width="13.2132%" height="15" fill="rgb(248,181,18)" fg:x="524" fg:w="176"/><text x="39.5893%" y="287.50">[unknown]</text></g><g><title>[unknown] (173 samples, 12.99%)</title><rect x="39.5646%" y="261" width="12.9880%" height="15" fill="rgb(233,39,42)" fg:x="527" fg:w="173"/><text x="39.8146%" y="271.50">[unknown]</text></g><g><title>[unknown] (171 samples, 12.84%)</title><rect x="39.7147%" y="245" width="12.8378%" height="15" fill="rgb(238,110,33)" fg:x="529" fg:w="171"/><text x="39.9647%" y="255.50">[unknown]</text></g><g><title>[unknown] (168 samples, 12.61%)</title><rect x="39.9399%" y="229" width="12.6126%" height="15" fill="rgb(233,195,10)" fg:x="532" fg:w="168"/><text x="40.1899%" y="239.50">[unknown]</text></g><g><title>[unknown] (165 samples, 12.39%)</title><rect x="40.1652%" y="213" width="12.3874%" height="15" fill="rgb(254,105,3)" fg:x="535" fg:w="165"/><text x="40.4152%" y="223.50">[unknown]</text></g><g><title>[unknown] (161 samples, 12.09%)</title><rect x="40.4655%" y="197" width="12.0871%" height="15" fill="rgb(221,225,9)" fg:x="539" fg:w="161"/><text x="40.7155%" y="207.50">[unknown]</text></g><g><title>[unknown] (159 samples, 11.94%)</title><rect x="40.6156%" y="181" width="11.9369%" height="15" fill="rgb(224,227,45)" fg:x="541" fg:w="159"/><text x="40.8656%" y="191.50">[unknown]</text></g><g><title>[unknown] (156 samples, 11.71%)</title><rect x="40.8408%" y="165" width="11.7117%" height="15" fill="rgb(229,198,43)" fg:x="544" fg:w="156"/><text x="41.0908%" y="175.50">[unknown]</text></g><g><title>[unknown] (155 samples, 11.64%)</title><rect x="40.9159%" y="149" width="11.6366%" height="15" fill="rgb(206,209,35)" fg:x="545" fg:w="155"/><text x="41.1659%" y="159.50">[unknown]</text></g><g><title>[unknown] (154 samples, 11.56%)</title><rect x="40.9910%" y="133" width="11.5616%" height="15" fill="rgb(245,195,53)" fg:x="546" fg:w="154"/><text x="41.2410%" y="143.50">[unknown]</text></g><g><title>[unknown] (152 samples, 11.41%)</title><rect x="41.1411%" y="117" width="11.4114%" height="15" fill="rgb(240,92,26)" fg:x="548" fg:w="152"/><text x="41.3911%" y="127.50">[unknown]</text></g><g><title>[unknown] (148 samples, 11.11%)</title><rect x="41.4414%" y="101" width="11.1111%" height="15" fill="rgb(207,40,23)" fg:x="552" fg:w="148"/><text x="41.6914%" y="111.50">[unknown]</text></g><g><title>[unknown] (146 samples, 10.96%)</title><rect x="41.5916%" y="85" width="10.9610%" height="15" fill="rgb(223,111,35)" fg:x="554" fg:w="146"/><text x="41.8416%" y="95.50">[unknown]</text></g><g><title>[unknown] (145 samples, 10.89%)</title><rect x="41.6667%" y="69" width="10.8859%" height="15" fill="rgb(229,147,28)" fg:x="555" fg:w="145"/><text x="41.9167%" y="79.50">[unknown]</text></g><g><title>[unknown] (145 samples, 10.89%)</title><rect x="41.6667%" y="53" width="10.8859%" height="15" fill="rgb(211,29,28)" fg:x="555" fg:w="145"/><text x="41.9167%" y="63.50">[unknown]</text></g><g><title>std::fs::File::open (188 samples, 14.11%)</title><rect x="38.5135%" y="629" width="14.1141%" height="15" fill="rgb(228,72,33)" fg:x="513" fg:w="188"/><text x="38.7635%" y="639.50">std::fs::File::open</text></g><g><title>std::fs::OpenOptions::open (188 samples, 14.11%)</title><rect x="38.5135%" y="613" width="14.1141%" height="15" fill="rgb(205,214,31)" fg:x="513" fg:w="188"/><text x="38.7635%" y="623.50">std::fs::OpenOptions:..</text></g><g><title>std::fs::OpenOptions::_open (188 samples, 14.11%)</title><rect x="38.5135%" y="597" width="14.1141%" height="15" fill="rgb(224,111,15)" fg:x="513" fg:w="188"/><text x="38.7635%" y="607.50">std::fs::OpenOptions:..</text></g><g><title>std::sys::unix::fs::File::open (188 samples, 14.11%)</title><rect x="38.5135%" y="581" width="14.1141%" height="15" fill="rgb(253,21,26)" fg:x="513" fg:w="188"/><text x="38.7635%" y="591.50">std::sys::unix::fs::F..</text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (188 samples, 14.11%)</title><rect x="38.5135%" y="565" width="14.1141%" height="15" fill="rgb(245,139,43)" fg:x="513" fg:w="188"/><text x="38.7635%" y="575.50">std::sys::common::sma..</text></g><g><title>std::sys::common::small_c_string::run_with_cstr (188 samples, 14.11%)</title><rect x="38.5135%" y="549" width="14.1141%" height="15" fill="rgb(252,170,7)" fg:x="513" fg:w="188"/><text x="38.7635%" y="559.50">std::sys::common::sma..</text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (188 samples, 14.11%)</title><rect x="38.5135%" y="533" width="14.1141%" height="15" fill="rgb(231,118,14)" fg:x="513" fg:w="188"/><text x="38.7635%" y="543.50">std::sys::unix::fs::F..</text></g><g><title>std::sys::unix::fs::File::open_c (188 samples, 14.11%)</title><rect x="38.5135%" y="517" width="14.1141%" height="15" fill="rgb(238,83,0)" fg:x="513" fg:w="188"/><text x="38.7635%" y="527.50">std::sys::unix::fs::F..</text></g><g><title>std::sys::unix::cvt_r (188 samples, 14.11%)</title><rect x="38.5135%" y="501" width="14.1141%" height="15" fill="rgb(221,39,39)" fg:x="513" fg:w="188"/><text x="38.7635%" y="511.50">std::sys::unix::cvt_r</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (188 samples, 14.11%)</title><rect x="38.5135%" y="485" width="14.1141%" height="15" fill="rgb(222,119,46)" fg:x="513" fg:w="188"/><text x="38.7635%" y="495.50">std::sys::unix::fs::F..</text></g><g><title>__libc_open64 (188 samples, 14.11%)</title><rect x="38.5135%" y="469" width="14.1141%" height="15" fill="rgb(222,165,49)" fg:x="513" fg:w="188"/><text x="38.7635%" y="479.50">__libc_open64</text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.08%)</title><rect x="52.5526%" y="453" width="0.0751%" height="15" fill="rgb(219,113,52)" fg:x="700" fg:w="1"/><text x="52.8026%" y="463.50"></text></g><g><title>core::str::converts::from_utf8 (3 samples, 0.23%)</title><rect x="52.6276%" y="597" width="0.2252%" height="15" fill="rgb(214,7,15)" fg:x="701" fg:w="3"/><text x="52.8776%" y="607.50"></text></g><g><title>core::str::validations::run_utf8_validation (3 samples, 0.23%)</title><rect x="52.6276%" y="581" width="0.2252%" height="15" fill="rgb(235,32,4)" fg:x="701" fg:w="3"/><text x="52.8776%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (13 samples, 0.98%)</title><rect x="52.8529%" y="565" width="0.9760%" height="15" fill="rgb(238,90,54)" fg:x="704" fg:w="13"/><text x="53.1029%" y="575.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (13 samples, 0.98%)</title><rect x="52.8529%" y="549" width="0.9760%" height="15" fill="rgb(213,208,19)" fg:x="704" fg:w="13"/><text x="53.1029%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (13 samples, 0.98%)</title><rect x="52.8529%" y="533" width="0.9760%" height="15" fill="rgb(233,156,4)" fg:x="704" fg:w="13"/><text x="53.1029%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (13 samples, 0.98%)</title><rect x="52.8529%" y="517" width="0.9760%" height="15" fill="rgb(207,194,5)" fg:x="704" fg:w="13"/><text x="53.1029%" y="527.50"></text></g><g><title>__libc_read (13 samples, 0.98%)</title><rect x="52.8529%" y="501" width="0.9760%" height="15" fill="rgb(206,111,30)" fg:x="704" fg:w="13"/><text x="53.1029%" y="511.50"></text></g><g><title>__libc_read (13 samples, 0.98%)</title><rect x="52.8529%" y="485" width="0.9760%" height="15" fill="rgb(243,70,54)" fg:x="704" fg:w="13"/><text x="53.1029%" y="495.50"></text></g><g><title>[unknown] (13 samples, 0.98%)</title><rect x="52.8529%" y="469" width="0.9760%" height="15" fill="rgb(242,28,8)" fg:x="704" fg:w="13"/><text x="53.1029%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.75%)</title><rect x="53.0781%" y="453" width="0.7508%" height="15" fill="rgb(219,106,18)" fg:x="707" fg:w="10"/><text x="53.3281%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.75%)</title><rect x="53.0781%" y="437" width="0.7508%" height="15" fill="rgb(244,222,10)" fg:x="707" fg:w="10"/><text x="53.3281%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.68%)</title><rect x="53.1532%" y="421" width="0.6757%" height="15" fill="rgb(236,179,52)" fg:x="708" fg:w="9"/><text x="53.4032%" y="431.50"></text></g><g><title>[unknown] (9 samples, 0.68%)</title><rect x="53.1532%" y="405" width="0.6757%" height="15" fill="rgb(213,23,39)" fg:x="708" fg:w="9"/><text x="53.4032%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="53.2282%" y="389" width="0.6006%" height="15" fill="rgb(238,48,10)" fg:x="709" fg:w="8"/><text x="53.4782%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="53.3033%" y="373" width="0.5255%" height="15" fill="rgb(251,196,23)" fg:x="710" fg:w="7"/><text x="53.5533%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="53.3033%" y="357" width="0.5255%" height="15" fill="rgb(250,152,24)" fg:x="710" fg:w="7"/><text x="53.5533%" y="367.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="53.3033%" y="341" width="0.5255%" height="15" fill="rgb(209,150,17)" fg:x="710" fg:w="7"/><text x="53.5533%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="53.4535%" y="325" width="0.3754%" height="15" fill="rgb(234,202,34)" fg:x="712" fg:w="5"/><text x="53.7035%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="53.5285%" y="309" width="0.3003%" height="15" fill="rgb(253,148,53)" fg:x="713" fg:w="4"/><text x="53.7785%" y="319.50"></text></g><g><title>__libc_read (1 samples, 0.08%)</title><rect x="53.8288%" y="565" width="0.0751%" height="15" fill="rgb(218,129,16)" fg:x="717" fg:w="1"/><text x="54.0788%" y="575.50"></text></g><g><title>__libc_read (1 samples, 0.08%)</title><rect x="53.8288%" y="549" width="0.0751%" height="15" fill="rgb(216,85,19)" fg:x="717" fg:w="1"/><text x="54.0788%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="53.8288%" y="533" width="0.0751%" height="15" fill="rgb(235,228,7)" fg:x="717" fg:w="1"/><text x="54.0788%" y="543.50"></text></g><g><title>lab4::package::PackageDownloader::run (570 samples, 42.79%)</title><rect x="11.2613%" y="677" width="42.7928%" height="15" fill="rgb(245,175,0)" fg:x="150" fg:w="570"/><text x="11.5113%" y="687.50">lab4::package::PackageDownloader::run</text></g><g><title>std::fs::read_to_string (231 samples, 17.34%)</title><rect x="36.7117%" y="661" width="17.3423%" height="15" fill="rgb(208,168,36)" fg:x="489" fg:w="231"/><text x="36.9617%" y="671.50">std::fs::read_to_string</text></g><g><title>std::fs::read_to_string::inner (231 samples, 17.34%)</title><rect x="36.7117%" y="645" width="17.3423%" height="15" fill="rgb(246,171,24)" fg:x="489" fg:w="231"/><text x="36.9617%" y="655.50">std::fs::read_to_string::in..</text></g><g><title>std::io::default_read_to_string (19 samples, 1.43%)</title><rect x="52.6276%" y="629" width="1.4264%" height="15" fill="rgb(215,142,24)" fg:x="701" fg:w="19"/><text x="52.8776%" y="639.50"></text></g><g><title>std::io::append_to_string (19 samples, 1.43%)</title><rect x="52.6276%" y="613" width="1.4264%" height="15" fill="rgb(250,187,7)" fg:x="701" fg:w="19"/><text x="52.8776%" y="623.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (16 samples, 1.20%)</title><rect x="52.8529%" y="597" width="1.2012%" height="15" fill="rgb(228,66,33)" fg:x="704" fg:w="16"/><text x="53.1029%" y="607.50"></text></g><g><title>std::io::default_read_to_end (16 samples, 1.20%)</title><rect x="52.8529%" y="581" width="1.2012%" height="15" fill="rgb(234,215,21)" fg:x="704" fg:w="16"/><text x="53.1029%" y="591.50"></text></g><g><title>std::io::default_read_to_end::small_probe_read (2 samples, 0.15%)</title><rect x="53.9039%" y="565" width="0.1502%" height="15" fill="rgb(222,191,20)" fg:x="718" fg:w="2"/><text x="54.1539%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.15%)</title><rect x="53.9039%" y="549" width="0.1502%" height="15" fill="rgb(245,79,54)" fg:x="718" fg:w="2"/><text x="54.1539%" y="559.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (2 samples, 0.15%)</title><rect x="53.9039%" y="533" width="0.1502%" height="15" fill="rgb(240,10,37)" fg:x="718" fg:w="2"/><text x="54.1539%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::read (2 samples, 0.15%)</title><rect x="53.9039%" y="517" width="0.1502%" height="15" fill="rgb(214,192,32)" fg:x="718" fg:w="2"/><text x="54.1539%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (2 samples, 0.15%)</title><rect x="53.9039%" y="501" width="0.1502%" height="15" fill="rgb(209,36,54)" fg:x="718" fg:w="2"/><text x="54.1539%" y="511.50"></text></g><g><title>__libc_read (2 samples, 0.15%)</title><rect x="53.9039%" y="485" width="0.1502%" height="15" fill="rgb(220,10,11)" fg:x="718" fg:w="2"/><text x="54.1539%" y="495.50"></text></g><g><title>__libc_read (2 samples, 0.15%)</title><rect x="53.9039%" y="469" width="0.1502%" height="15" fill="rgb(221,106,17)" fg:x="718" fg:w="2"/><text x="54.1539%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="53.9039%" y="453" width="0.1502%" height="15" fill="rgb(251,142,44)" fg:x="718" fg:w="2"/><text x="54.1539%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="54.7297%" y="661" width="0.0751%" height="15" fill="rgb(238,13,15)" fg:x="729" fg:w="1"/><text x="54.9797%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.08%)</title><rect x="54.7297%" y="645" width="0.0751%" height="15" fill="rgb(208,107,27)" fg:x="729" fg:w="1"/><text x="54.9797%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3 samples, 0.23%)</title><rect x="54.8048%" y="661" width="0.2252%" height="15" fill="rgb(205,136,37)" fg:x="730" fg:w="3"/><text x="55.0548%" y="671.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.15%)</title><rect x="55.1051%" y="645" width="0.1502%" height="15" fill="rgb(250,205,27)" fg:x="734" fg:w="2"/><text x="55.3551%" y="655.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (2 samples, 0.15%)</title><rect x="55.1051%" y="629" width="0.1502%" height="15" fill="rgb(210,80,43)" fg:x="734" fg:w="2"/><text x="55.3551%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="55.2553%" y="645" width="0.4505%" height="15" fill="rgb(247,160,36)" fg:x="736" fg:w="6"/><text x="55.5053%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="629" width="0.3754%" height="15" fill="rgb(234,13,49)" fg:x="737" fg:w="5"/><text x="55.5803%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="613" width="0.3754%" height="15" fill="rgb(234,122,0)" fg:x="737" fg:w="5"/><text x="55.5803%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="597" width="0.3754%" height="15" fill="rgb(207,146,38)" fg:x="737" fg:w="5"/><text x="55.5803%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="581" width="0.3754%" height="15" fill="rgb(207,177,25)" fg:x="737" fg:w="5"/><text x="55.5803%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="565" width="0.3754%" height="15" fill="rgb(211,178,42)" fg:x="737" fg:w="5"/><text x="55.5803%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="549" width="0.3754%" height="15" fill="rgb(230,69,54)" fg:x="737" fg:w="5"/><text x="55.5803%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="533" width="0.3754%" height="15" fill="rgb(214,135,41)" fg:x="737" fg:w="5"/><text x="55.5803%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="517" width="0.3754%" height="15" fill="rgb(237,67,25)" fg:x="737" fg:w="5"/><text x="55.5803%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="501" width="0.3754%" height="15" fill="rgb(222,189,50)" fg:x="737" fg:w="5"/><text x="55.5803%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="485" width="0.3754%" height="15" fill="rgb(245,148,34)" fg:x="737" fg:w="5"/><text x="55.5803%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="469" width="0.3754%" height="15" fill="rgb(222,29,6)" fg:x="737" fg:w="5"/><text x="55.5803%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="55.3303%" y="453" width="0.3754%" height="15" fill="rgb(221,189,43)" fg:x="737" fg:w="5"/><text x="55.5803%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (33 samples, 2.48%)</title><rect x="55.7057%" y="645" width="2.4775%" height="15" fill="rgb(207,36,27)" fg:x="742" fg:w="33"/><text x="55.9557%" y="655.50">co..</text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="57.7327%" y="629" width="0.4505%" height="15" fill="rgb(217,90,24)" fg:x="769" fg:w="6"/><text x="57.9827%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="57.7327%" y="613" width="0.4505%" height="15" fill="rgb(224,66,35)" fg:x="769" fg:w="6"/><text x="57.9827%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="57.7327%" y="597" width="0.4505%" height="15" fill="rgb(221,13,50)" fg:x="769" fg:w="6"/><text x="57.9827%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="57.7327%" y="581" width="0.4505%" height="15" fill="rgb(236,68,49)" fg:x="769" fg:w="6"/><text x="57.9827%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="57.7327%" y="565" width="0.4505%" height="15" fill="rgb(229,146,28)" fg:x="769" fg:w="6"/><text x="57.9827%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="57.7327%" y="549" width="0.4505%" height="15" fill="rgb(225,31,38)" fg:x="769" fg:w="6"/><text x="57.9827%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="57.7327%" y="533" width="0.4505%" height="15" fill="rgb(250,208,3)" fg:x="769" fg:w="6"/><text x="57.9827%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="57.8078%" y="517" width="0.3754%" height="15" fill="rgb(246,54,23)" fg:x="770" fg:w="5"/><text x="58.0578%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="57.8078%" y="501" width="0.3754%" height="15" fill="rgb(243,76,11)" fg:x="770" fg:w="5"/><text x="58.0578%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="57.8078%" y="485" width="0.3754%" height="15" fill="rgb(245,21,50)" fg:x="770" fg:w="5"/><text x="58.0578%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="57.8078%" y="469" width="0.3754%" height="15" fill="rgb(228,9,43)" fg:x="770" fg:w="5"/><text x="58.0578%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="57.8078%" y="453" width="0.3754%" height="15" fill="rgb(208,100,47)" fg:x="770" fg:w="5"/><text x="58.0578%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="57.8078%" y="437" width="0.3754%" height="15" fill="rgb(232,26,8)" fg:x="770" fg:w="5"/><text x="58.0578%" y="447.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (5 samples, 0.38%)</title><rect x="59.6847%" y="629" width="0.3754%" height="15" fill="rgb(216,166,38)" fg:x="795" fg:w="5"/><text x="59.9347%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.60%)</title><rect x="60.0601%" y="629" width="0.6006%" height="15" fill="rgb(251,202,51)" fg:x="800" fg:w="8"/><text x="60.3101%" y="639.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (7 samples, 0.53%)</title><rect x="60.6607%" y="533" width="0.5255%" height="15" fill="rgb(254,216,34)" fg:x="808" fg:w="7"/><text x="60.9107%" y="543.50"></text></g><g><title>__GI___sched_yield (7 samples, 0.53%)</title><rect x="60.6607%" y="517" width="0.5255%" height="15" fill="rgb(251,32,27)" fg:x="808" fg:w="7"/><text x="60.9107%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="60.6607%" y="501" width="0.5255%" height="15" fill="rgb(208,127,28)" fg:x="808" fg:w="7"/><text x="60.9107%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="60.7357%" y="485" width="0.4505%" height="15" fill="rgb(224,137,22)" fg:x="809" fg:w="6"/><text x="60.9857%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="60.7357%" y="469" width="0.4505%" height="15" fill="rgb(254,70,32)" fg:x="809" fg:w="6"/><text x="60.9857%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="60.7357%" y="453" width="0.4505%" height="15" fill="rgb(229,75,37)" fg:x="809" fg:w="6"/><text x="60.9857%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="60.7357%" y="437" width="0.4505%" height="15" fill="rgb(252,64,23)" fg:x="809" fg:w="6"/><text x="60.9857%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="60.7357%" y="421" width="0.4505%" height="15" fill="rgb(232,162,48)" fg:x="809" fg:w="6"/><text x="60.9857%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="60.7357%" y="405" width="0.4505%" height="15" fill="rgb(246,160,12)" fg:x="809" fg:w="6"/><text x="60.9857%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="60.8108%" y="389" width="0.3754%" height="15" fill="rgb(247,166,0)" fg:x="810" fg:w="5"/><text x="61.0608%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="60.8108%" y="373" width="0.3754%" height="15" fill="rgb(249,219,21)" fg:x="810" fg:w="5"/><text x="61.0608%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="60.8108%" y="357" width="0.3754%" height="15" fill="rgb(205,209,3)" fg:x="810" fg:w="5"/><text x="61.0608%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="60.8108%" y="341" width="0.3754%" height="15" fill="rgb(243,44,1)" fg:x="810" fg:w="5"/><text x="61.0608%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="60.8108%" y="325" width="0.3754%" height="15" fill="rgb(206,159,16)" fg:x="810" fg:w="5"/><text x="61.0608%" y="335.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (13 samples, 0.98%)</title><rect x="60.6607%" y="549" width="0.9760%" height="15" fill="rgb(244,77,30)" fg:x="808" fg:w="13"/><text x="60.9107%" y="559.50"></text></g><g><title>std::thread::park (6 samples, 0.45%)</title><rect x="61.1862%" y="533" width="0.4505%" height="15" fill="rgb(218,69,12)" fg:x="815" fg:w="6"/><text x="61.4362%" y="543.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (6 samples, 0.45%)</title><rect x="61.1862%" y="517" width="0.4505%" height="15" fill="rgb(212,87,7)" fg:x="815" fg:w="6"/><text x="61.4362%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (6 samples, 0.45%)</title><rect x="61.1862%" y="501" width="0.4505%" height="15" fill="rgb(245,114,25)" fg:x="815" fg:w="6"/><text x="61.4362%" y="511.50"></text></g><g><title>syscall (6 samples, 0.45%)</title><rect x="61.1862%" y="485" width="0.4505%" height="15" fill="rgb(210,61,42)" fg:x="815" fg:w="6"/><text x="61.4362%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="61.1862%" y="469" width="0.4505%" height="15" fill="rgb(211,52,33)" fg:x="815" fg:w="6"/><text x="61.4362%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="61.1862%" y="453" width="0.4505%" height="15" fill="rgb(234,58,33)" fg:x="815" fg:w="6"/><text x="61.4362%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="61.1862%" y="437" width="0.4505%" height="15" fill="rgb(220,115,36)" fg:x="815" fg:w="6"/><text x="61.4362%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="61.1862%" y="421" width="0.4505%" height="15" fill="rgb(243,153,54)" fg:x="815" fg:w="6"/><text x="61.4362%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="61.1862%" y="405" width="0.4505%" height="15" fill="rgb(251,47,18)" fg:x="815" fg:w="6"/><text x="61.4362%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="389" width="0.3754%" height="15" fill="rgb(242,102,42)" fg:x="816" fg:w="5"/><text x="61.5113%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="373" width="0.3754%" height="15" fill="rgb(234,31,38)" fg:x="816" fg:w="5"/><text x="61.5113%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="357" width="0.3754%" height="15" fill="rgb(221,117,51)" fg:x="816" fg:w="5"/><text x="61.5113%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="341" width="0.3754%" height="15" fill="rgb(212,20,18)" fg:x="816" fg:w="5"/><text x="61.5113%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="325" width="0.3754%" height="15" fill="rgb(245,133,36)" fg:x="816" fg:w="5"/><text x="61.5113%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="309" width="0.3754%" height="15" fill="rgb(212,6,19)" fg:x="816" fg:w="5"/><text x="61.5113%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="293" width="0.3754%" height="15" fill="rgb(218,1,36)" fg:x="816" fg:w="5"/><text x="61.5113%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="277" width="0.3754%" height="15" fill="rgb(246,84,54)" fg:x="816" fg:w="5"/><text x="61.5113%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="61.2613%" y="261" width="0.3754%" height="15" fill="rgb(242,110,6)" fg:x="816" fg:w="5"/><text x="61.5113%" y="271.50"></text></g><g><title>crossbeam_channel::context::Context::with (19 samples, 1.43%)</title><rect x="60.6607%" y="629" width="1.4264%" height="15" fill="rgb(214,47,5)" fg:x="808" fg:w="19"/><text x="60.9107%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 1.43%)</title><rect x="60.6607%" y="613" width="1.4264%" height="15" fill="rgb(218,159,25)" fg:x="808" fg:w="19"/><text x="60.9107%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (19 samples, 1.43%)</title><rect x="60.6607%" y="597" width="1.4264%" height="15" fill="rgb(215,211,28)" fg:x="808" fg:w="19"/><text x="60.9107%" y="607.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (19 samples, 1.43%)</title><rect x="60.6607%" y="581" width="1.4264%" height="15" fill="rgb(238,59,32)" fg:x="808" fg:w="19"/><text x="60.9107%" y="591.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (19 samples, 1.43%)</title><rect x="60.6607%" y="565" width="1.4264%" height="15" fill="rgb(226,82,3)" fg:x="808" fg:w="19"/><text x="60.9107%" y="575.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::register (6 samples, 0.45%)</title><rect x="61.6366%" y="549" width="0.4505%" height="15" fill="rgb(240,164,32)" fg:x="821" fg:w="6"/><text x="61.8866%" y="559.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (6 samples, 0.45%)</title><rect x="61.6366%" y="533" width="0.4505%" height="15" fill="rgb(232,46,7)" fg:x="821" fg:w="6"/><text x="61.8866%" y="543.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (6 samples, 0.45%)</title><rect x="61.6366%" y="517" width="0.4505%" height="15" fill="rgb(229,129,53)" fg:x="821" fg:w="6"/><text x="61.8866%" y="527.50"></text></g><g><title>__GI___sched_yield (6 samples, 0.45%)</title><rect x="61.6366%" y="501" width="0.4505%" height="15" fill="rgb(234,188,29)" fg:x="821" fg:w="6"/><text x="61.8866%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="61.6366%" y="485" width="0.4505%" height="15" fill="rgb(246,141,4)" fg:x="821" fg:w="6"/><text x="61.8866%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="61.9369%" y="469" width="0.1502%" height="15" fill="rgb(229,23,39)" fg:x="825" fg:w="2"/><text x="62.1869%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="61.9369%" y="453" width="0.1502%" height="15" fill="rgb(206,12,3)" fg:x="825" fg:w="2"/><text x="62.1869%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="62.0120%" y="437" width="0.0751%" height="15" fill="rgb(252,226,20)" fg:x="826" fg:w="1"/><text x="62.2620%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="62.0120%" y="421" width="0.0751%" height="15" fill="rgb(216,123,35)" fg:x="826" fg:w="1"/><text x="62.2620%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="62.0120%" y="405" width="0.0751%" height="15" fill="rgb(212,68,40)" fg:x="826" fg:w="1"/><text x="62.2620%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="62.0120%" y="389" width="0.0751%" height="15" fill="rgb(254,125,32)" fg:x="826" fg:w="1"/><text x="62.2620%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (6 samples, 0.45%)</title><rect x="62.7628%" y="613" width="0.4505%" height="15" fill="rgb(253,97,22)" fg:x="836" fg:w="6"/><text x="63.0128%" y="623.50"></text></g><g><title>core::ptr::read (6 samples, 0.45%)</title><rect x="62.7628%" y="597" width="0.4505%" height="15" fill="rgb(241,101,14)" fg:x="836" fg:w="6"/><text x="63.0128%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.08%)</title><rect x="63.2132%" y="613" width="0.0751%" height="15" fill="rgb(238,103,29)" fg:x="842" fg:w="1"/><text x="63.4632%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.08%)</title><rect x="63.2132%" y="597" width="0.0751%" height="15" fill="rgb(233,195,47)" fg:x="842" fg:w="1"/><text x="63.4632%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.08%)</title><rect x="63.2132%" y="581" width="0.0751%" height="15" fill="rgb(246,218,30)" fg:x="842" fg:w="1"/><text x="63.4632%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (31 samples, 2.33%)</title><rect x="63.2883%" y="613" width="2.3273%" height="15" fill="rgb(219,145,47)" fg:x="843" fg:w="31"/><text x="63.5383%" y="623.50">c..</text></g><g><title>core::sync::atomic::atomic_or (31 samples, 2.33%)</title><rect x="63.2883%" y="597" width="2.3273%" height="15" fill="rgb(243,12,26)" fg:x="843" fg:w="31"/><text x="63.5383%" y="607.50">c..</text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="581" width="0.3754%" height="15" fill="rgb(214,87,16)" fg:x="869" fg:w="5"/><text x="65.4902%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="565" width="0.3754%" height="15" fill="rgb(208,99,42)" fg:x="869" fg:w="5"/><text x="65.4902%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="549" width="0.3754%" height="15" fill="rgb(253,99,2)" fg:x="869" fg:w="5"/><text x="65.4902%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="533" width="0.3754%" height="15" fill="rgb(220,168,23)" fg:x="869" fg:w="5"/><text x="65.4902%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="517" width="0.3754%" height="15" fill="rgb(242,38,24)" fg:x="869" fg:w="5"/><text x="65.4902%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="501" width="0.3754%" height="15" fill="rgb(225,182,9)" fg:x="869" fg:w="5"/><text x="65.4902%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="485" width="0.3754%" height="15" fill="rgb(243,178,37)" fg:x="869" fg:w="5"/><text x="65.4902%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="469" width="0.3754%" height="15" fill="rgb(232,139,19)" fg:x="869" fg:w="5"/><text x="65.4902%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="453" width="0.3754%" height="15" fill="rgb(225,201,24)" fg:x="869" fg:w="5"/><text x="65.4902%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="437" width="0.3754%" height="15" fill="rgb(221,47,46)" fg:x="869" fg:w="5"/><text x="65.4902%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="421" width="0.3754%" height="15" fill="rgb(249,23,13)" fg:x="869" fg:w="5"/><text x="65.4902%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="405" width="0.3754%" height="15" fill="rgb(219,9,5)" fg:x="869" fg:w="5"/><text x="65.4902%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="65.2402%" y="389" width="0.3754%" height="15" fill="rgb(254,171,16)" fg:x="869" fg:w="5"/><text x="65.4902%" y="399.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="65.8408%" y="517" width="0.1502%" height="15" fill="rgb(230,171,20)" fg:x="877" fg:w="2"/><text x="66.0908%" y="527.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (10 samples, 0.75%)</title><rect x="65.6156%" y="613" width="0.7508%" height="15" fill="rgb(210,71,41)" fg:x="874" fg:w="10"/><text x="65.8656%" y="623.50"></text></g><g><title>core::mem::drop (7 samples, 0.53%)</title><rect x="65.8408%" y="597" width="0.5255%" height="15" fill="rgb(206,173,20)" fg:x="877" fg:w="7"/><text x="66.0908%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (7 samples, 0.53%)</title><rect x="65.8408%" y="581" width="0.5255%" height="15" fill="rgb(233,88,34)" fg:x="877" fg:w="7"/><text x="66.0908%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.53%)</title><rect x="65.8408%" y="565" width="0.5255%" height="15" fill="rgb(223,209,46)" fg:x="877" fg:w="7"/><text x="66.0908%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.53%)</title><rect x="65.8408%" y="549" width="0.5255%" height="15" fill="rgb(250,43,18)" fg:x="877" fg:w="7"/><text x="66.0908%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.53%)</title><rect x="65.8408%" y="533" width="0.5255%" height="15" fill="rgb(208,13,10)" fg:x="877" fg:w="7"/><text x="66.0908%" y="543.50"></text></g><g><title>_int_free (5 samples, 0.38%)</title><rect x="65.9910%" y="517" width="0.3754%" height="15" fill="rgb(212,200,36)" fg:x="879" fg:w="5"/><text x="66.2410%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.15%)</title><rect x="66.4414%" y="597" width="0.1502%" height="15" fill="rgb(225,90,30)" fg:x="885" fg:w="2"/><text x="66.6914%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.15%)</title><rect x="66.4414%" y="581" width="0.1502%" height="15" fill="rgb(236,182,39)" fg:x="885" fg:w="2"/><text x="66.6914%" y="591.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (93 samples, 6.98%)</title><rect x="62.0871%" y="629" width="6.9820%" height="15" fill="rgb(212,144,35)" fg:x="827" fg:w="93"/><text x="62.3371%" y="639.50">crossbeam..</text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (36 samples, 2.70%)</title><rect x="66.3664%" y="613" width="2.7027%" height="15" fill="rgb(228,63,44)" fg:x="884" fg:w="36"/><text x="66.6164%" y="623.50">cr..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (33 samples, 2.48%)</title><rect x="66.5916%" y="597" width="2.4775%" height="15" fill="rgb(228,109,6)" fg:x="887" fg:w="33"/><text x="66.8416%" y="607.50">cr..</text></g><g><title>__GI___sched_yield (33 samples, 2.48%)</title><rect x="66.5916%" y="581" width="2.4775%" height="15" fill="rgb(238,117,24)" fg:x="887" fg:w="33"/><text x="66.8416%" y="591.50">__..</text></g><g><title>[unknown] (33 samples, 2.48%)</title><rect x="66.5916%" y="565" width="2.4775%" height="15" fill="rgb(242,26,26)" fg:x="887" fg:w="33"/><text x="66.8416%" y="575.50">[u..</text></g><g><title>[unknown] (30 samples, 2.25%)</title><rect x="66.8168%" y="549" width="2.2523%" height="15" fill="rgb(221,92,48)" fg:x="890" fg:w="30"/><text x="67.0668%" y="559.50">[..</text></g><g><title>[unknown] (30 samples, 2.25%)</title><rect x="66.8168%" y="533" width="2.2523%" height="15" fill="rgb(209,209,32)" fg:x="890" fg:w="30"/><text x="67.0668%" y="543.50">[..</text></g><g><title>[unknown] (30 samples, 2.25%)</title><rect x="66.8168%" y="517" width="2.2523%" height="15" fill="rgb(221,70,22)" fg:x="890" fg:w="30"/><text x="67.0668%" y="527.50">[..</text></g><g><title>[unknown] (29 samples, 2.18%)</title><rect x="66.8919%" y="501" width="2.1772%" height="15" fill="rgb(248,145,5)" fg:x="891" fg:w="29"/><text x="67.1419%" y="511.50">[..</text></g><g><title>[unknown] (29 samples, 2.18%)</title><rect x="66.8919%" y="485" width="2.1772%" height="15" fill="rgb(226,116,26)" fg:x="891" fg:w="29"/><text x="67.1419%" y="495.50">[..</text></g><g><title>[unknown] (28 samples, 2.10%)</title><rect x="66.9670%" y="469" width="2.1021%" height="15" fill="rgb(244,5,17)" fg:x="892" fg:w="28"/><text x="67.2170%" y="479.50">[..</text></g><g><title>[unknown] (27 samples, 2.03%)</title><rect x="67.0420%" y="453" width="2.0270%" height="15" fill="rgb(252,159,33)" fg:x="893" fg:w="27"/><text x="67.2920%" y="463.50">[..</text></g><g><title>[unknown] (27 samples, 2.03%)</title><rect x="67.0420%" y="437" width="2.0270%" height="15" fill="rgb(206,71,0)" fg:x="893" fg:w="27"/><text x="67.2920%" y="447.50">[..</text></g><g><title>[unknown] (27 samples, 2.03%)</title><rect x="67.0420%" y="421" width="2.0270%" height="15" fill="rgb(233,118,54)" fg:x="893" fg:w="27"/><text x="67.2920%" y="431.50">[..</text></g><g><title>[unknown] (27 samples, 2.03%)</title><rect x="67.0420%" y="405" width="2.0270%" height="15" fill="rgb(234,83,48)" fg:x="893" fg:w="27"/><text x="67.2920%" y="415.50">[..</text></g><g><title>[unknown] (26 samples, 1.95%)</title><rect x="67.1171%" y="389" width="1.9520%" height="15" fill="rgb(228,3,54)" fg:x="894" fg:w="26"/><text x="67.3671%" y="399.50">[..</text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.15%)</title><rect x="71.5465%" y="613" width="0.1502%" height="15" fill="rgb(226,155,13)" fg:x="953" fg:w="2"/><text x="71.7965%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.15%)</title><rect x="71.5465%" y="597" width="0.1502%" height="15" fill="rgb(241,28,37)" fg:x="953" fg:w="2"/><text x="71.7965%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (23 samples, 1.73%)</title><rect x="71.6967%" y="613" width="1.7267%" height="15" fill="rgb(233,93,10)" fg:x="955" fg:w="23"/><text x="71.9467%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23 samples, 1.73%)</title><rect x="71.6967%" y="597" width="1.7267%" height="15" fill="rgb(225,113,19)" fg:x="955" fg:w="23"/><text x="71.9467%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 1.43%)</title><rect x="73.4234%" y="613" width="1.4264%" height="15" fill="rgb(241,2,18)" fg:x="978" fg:w="19"/><text x="73.6734%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 1.43%)</title><rect x="73.4234%" y="597" width="1.4264%" height="15" fill="rgb(228,207,21)" fg:x="978" fg:w="19"/><text x="73.6734%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="74.3243%" y="581" width="0.5255%" height="15" fill="rgb(213,211,35)" fg:x="990" fg:w="7"/><text x="74.5743%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="74.3243%" y="565" width="0.5255%" height="15" fill="rgb(209,83,10)" fg:x="990" fg:w="7"/><text x="74.5743%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="74.3243%" y="549" width="0.5255%" height="15" fill="rgb(209,164,1)" fg:x="990" fg:w="7"/><text x="74.5743%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="74.3243%" y="533" width="0.5255%" height="15" fill="rgb(213,184,43)" fg:x="990" fg:w="7"/><text x="74.5743%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="74.3243%" y="517" width="0.5255%" height="15" fill="rgb(231,61,34)" fg:x="990" fg:w="7"/><text x="74.5743%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="74.3243%" y="501" width="0.5255%" height="15" fill="rgb(235,75,3)" fg:x="990" fg:w="7"/><text x="74.5743%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="74.3243%" y="485" width="0.5255%" height="15" fill="rgb(220,106,47)" fg:x="990" fg:w="7"/><text x="74.5743%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="74.3994%" y="469" width="0.4505%" height="15" fill="rgb(210,196,33)" fg:x="991" fg:w="6"/><text x="74.6494%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="74.3994%" y="453" width="0.4505%" height="15" fill="rgb(229,154,42)" fg:x="991" fg:w="6"/><text x="74.6494%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="74.3994%" y="437" width="0.4505%" height="15" fill="rgb(228,114,26)" fg:x="991" fg:w="6"/><text x="74.6494%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="74.4745%" y="421" width="0.3754%" height="15" fill="rgb(208,144,1)" fg:x="992" fg:w="5"/><text x="74.7245%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="74.4745%" y="405" width="0.3754%" height="15" fill="rgb(239,112,37)" fg:x="992" fg:w="5"/><text x="74.7245%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="74.4745%" y="389" width="0.3754%" height="15" fill="rgb(210,96,50)" fg:x="992" fg:w="5"/><text x="74.7245%" y="399.50"></text></g><g><title>core::sync::atomic::fence (13 samples, 0.98%)</title><rect x="74.8498%" y="613" width="0.9760%" height="15" fill="rgb(222,178,2)" fg:x="997" fg:w="13"/><text x="75.0998%" y="623.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (7 samples, 0.53%)</title><rect x="75.8258%" y="613" width="0.5255%" height="15" fill="rgb(226,74,18)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="623.50"></text></g><g><title>__GI___sched_yield (7 samples, 0.53%)</title><rect x="75.8258%" y="597" width="0.5255%" height="15" fill="rgb(225,67,54)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="581" width="0.5255%" height="15" fill="rgb(251,92,32)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="565" width="0.5255%" height="15" fill="rgb(228,149,22)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="549" width="0.5255%" height="15" fill="rgb(243,54,13)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="533" width="0.5255%" height="15" fill="rgb(243,180,28)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="517" width="0.5255%" height="15" fill="rgb(208,167,24)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="501" width="0.5255%" height="15" fill="rgb(245,73,45)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="485" width="0.5255%" height="15" fill="rgb(237,203,48)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="469" width="0.5255%" height="15" fill="rgb(211,197,16)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="453" width="0.5255%" height="15" fill="rgb(243,99,51)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="437" width="0.5255%" height="15" fill="rgb(215,123,29)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="421" width="0.5255%" height="15" fill="rgb(239,186,37)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="75.8258%" y="405" width="0.5255%" height="15" fill="rgb(252,136,39)" fg:x="1010" fg:w="7"/><text x="76.0758%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="389" width="0.0751%" height="15" fill="rgb(223,213,32)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="373" width="0.0751%" height="15" fill="rgb(233,115,5)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="357" width="0.0751%" height="15" fill="rgb(207,226,44)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="341" width="0.0751%" height="15" fill="rgb(208,126,0)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="325" width="0.0751%" height="15" fill="rgb(244,66,21)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="309" width="0.0751%" height="15" fill="rgb(222,97,12)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="293" width="0.0751%" height="15" fill="rgb(219,213,19)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="277" width="0.0751%" height="15" fill="rgb(252,169,30)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="261" width="0.0751%" height="15" fill="rgb(206,32,51)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="76.2763%" y="245" width="0.0751%" height="15" fill="rgb(250,172,42)" fg:x="1016" fg:w="1"/><text x="76.5263%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.75%)</title><rect x="76.3514%" y="597" width="0.7508%" height="15" fill="rgb(209,34,43)" fg:x="1017" fg:w="10"/><text x="76.6014%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.75%)</title><rect x="76.3514%" y="581" width="0.7508%" height="15" fill="rgb(223,11,35)" fg:x="1017" fg:w="10"/><text x="76.6014%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (10 samples, 0.75%)</title><rect x="76.3514%" y="565" width="0.7508%" height="15" fill="rgb(251,219,26)" fg:x="1017" fg:w="10"/><text x="76.6014%" y="575.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (124 samples, 9.31%)</title><rect x="69.0691%" y="629" width="9.3093%" height="15" fill="rgb(231,119,3)" fg:x="920" fg:w="124"/><text x="69.3191%" y="639.50">crossbeam_cha..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (27 samples, 2.03%)</title><rect x="76.3514%" y="613" width="2.0270%" height="15" fill="rgb(216,97,11)" fg:x="1017" fg:w="27"/><text x="76.6014%" y="623.50">c..</text></g><g><title>core::sync::atomic::spin_loop_hint (17 samples, 1.28%)</title><rect x="77.1021%" y="597" width="1.2763%" height="15" fill="rgb(223,59,9)" fg:x="1027" fg:w="17"/><text x="77.3521%" y="607.50"></text></g><g><title>core::hint::spin_loop (17 samples, 1.28%)</title><rect x="77.1021%" y="581" width="1.2763%" height="15" fill="rgb(233,93,31)" fg:x="1027" fg:w="17"/><text x="77.3521%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (17 samples, 1.28%)</title><rect x="77.1021%" y="565" width="1.2763%" height="15" fill="rgb(239,81,33)" fg:x="1027" fg:w="17"/><text x="77.3521%" y="575.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::new (1 samples, 0.08%)</title><rect x="78.3784%" y="629" width="0.0751%" height="15" fill="rgb(213,120,34)" fg:x="1044" fg:w="1"/><text x="78.6284%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="78.3784%" y="613" width="0.0751%" height="15" fill="rgb(243,49,53)" fg:x="1044" fg:w="1"/><text x="78.6284%" y="623.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="78.3784%" y="597" width="0.0751%" height="15" fill="rgb(247,216,33)" fg:x="1044" fg:w="1"/><text x="78.6284%" y="607.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (314 samples, 23.57%)</title><rect x="55.0300%" y="661" width="23.5736%" height="15" fill="rgb(226,26,14)" fg:x="733" fg:w="314"/><text x="55.2800%" y="671.50">crossbeam_channel::channel::Receiver&lt;..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (272 samples, 20.42%)</title><rect x="58.1832%" y="645" width="20.4204%" height="15" fill="rgb(215,49,53)" fg:x="775" fg:w="272"/><text x="58.4332%" y="655.50">crossbeam_channel::flavors::list..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (2 samples, 0.15%)</title><rect x="78.4535%" y="629" width="0.1502%" height="15" fill="rgb(245,162,40)" fg:x="1045" fg:w="2"/><text x="78.7035%" y="639.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.08%)</title><rect x="78.5285%" y="613" width="0.0751%" height="15" fill="rgb(229,68,17)" fg:x="1046" fg:w="1"/><text x="78.7785%" y="623.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.08%)</title><rect x="78.5285%" y="597" width="0.0751%" height="15" fill="rgb(213,182,10)" fg:x="1046" fg:w="1"/><text x="78.7785%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.08%)</title><rect x="78.5285%" y="581" width="0.0751%" height="15" fill="rgb(245,125,30)" fg:x="1046" fg:w="1"/><text x="78.7785%" y="591.50"></text></g><g><title>&lt;crossbeam_channel::counter::Sender&lt;C&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="80.5556%" y="645" width="0.0751%" height="15" fill="rgb(232,202,2)" fg:x="1073" fg:w="1"/><text x="80.8056%" y="655.50"></text></g><g><title>crossbeam_channel::counter::Sender&lt;C&gt;::counter (1 samples, 0.08%)</title><rect x="80.5556%" y="629" width="0.0751%" height="15" fill="rgb(237,140,51)" fg:x="1073" fg:w="1"/><text x="80.8056%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="80.5556%" y="613" width="0.0751%" height="15" fill="rgb(236,157,25)" fg:x="1073" fg:w="1"/><text x="80.8056%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="80.5556%" y="597" width="0.0751%" height="15" fill="rgb(219,209,0)" fg:x="1073" fg:w="1"/><text x="80.8056%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="80.5556%" y="581" width="0.0751%" height="15" fill="rgb(240,116,54)" fg:x="1073" fg:w="1"/><text x="80.8056%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="80.5556%" y="565" width="0.0751%" height="15" fill="rgb(216,10,36)" fg:x="1073" fg:w="1"/><text x="80.8056%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="80.5556%" y="549" width="0.0751%" height="15" fill="rgb(222,72,44)" fg:x="1073" fg:w="1"/><text x="80.8056%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="80.6306%" y="645" width="0.0751%" height="15" fill="rgb(232,159,9)" fg:x="1074" fg:w="1"/><text x="80.8806%" y="655.50"></text></g><g><title>__memset_avx2_unaligned_erms (7 samples, 0.53%)</title><rect x="82.8829%" y="597" width="0.5255%" height="15" fill="rgb(210,39,32)" fg:x="1104" fg:w="7"/><text x="83.1329%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="581" width="0.0751%" height="15" fill="rgb(216,194,45)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="565" width="0.0751%" height="15" fill="rgb(218,18,35)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="549" width="0.0751%" height="15" fill="rgb(207,83,51)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="533" width="0.0751%" height="15" fill="rgb(225,63,43)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="517" width="0.0751%" height="15" fill="rgb(207,57,36)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="501" width="0.0751%" height="15" fill="rgb(216,99,33)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="485" width="0.0751%" height="15" fill="rgb(225,42,16)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="469" width="0.0751%" height="15" fill="rgb(220,201,45)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="453" width="0.0751%" height="15" fill="rgb(225,33,4)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="83.3333%" y="437" width="0.0751%" height="15" fill="rgb(224,33,50)" fg:x="1110" fg:w="1"/><text x="83.5833%" y="447.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.60%)</title><rect x="83.4835%" y="533" width="0.6006%" height="15" fill="rgb(246,198,51)" fg:x="1112" fg:w="8"/><text x="83.7335%" y="543.50"></text></g><g><title>_int_malloc (4 samples, 0.30%)</title><rect x="83.7838%" y="517" width="0.3003%" height="15" fill="rgb(205,22,4)" fg:x="1116" fg:w="4"/><text x="84.0338%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="501" width="0.0751%" height="15" fill="rgb(206,3,8)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="485" width="0.0751%" height="15" fill="rgb(251,23,15)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="469" width="0.0751%" height="15" fill="rgb(252,88,28)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="453" width="0.0751%" height="15" fill="rgb(212,127,14)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="437" width="0.0751%" height="15" fill="rgb(247,145,37)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="421" width="0.0751%" height="15" fill="rgb(209,117,53)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="405" width="0.0751%" height="15" fill="rgb(212,90,42)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="389" width="0.0751%" height="15" fill="rgb(218,164,37)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="373" width="0.0751%" height="15" fill="rgb(246,65,34)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="357" width="0.0751%" height="15" fill="rgb(231,100,33)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="84.0090%" y="341" width="0.0751%" height="15" fill="rgb(228,126,14)" fg:x="1119" fg:w="1"/><text x="84.2590%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 1.28%)</title><rect x="82.8829%" y="613" width="1.2763%" height="15" fill="rgb(215,173,21)" fg:x="1104" fg:w="17"/><text x="83.1329%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.75%)</title><rect x="83.4084%" y="597" width="0.7508%" height="15" fill="rgb(210,6,40)" fg:x="1111" fg:w="10"/><text x="83.6584%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.75%)</title><rect x="83.4084%" y="581" width="0.7508%" height="15" fill="rgb(212,48,18)" fg:x="1111" fg:w="10"/><text x="83.6584%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.75%)</title><rect x="83.4084%" y="565" width="0.7508%" height="15" fill="rgb(230,214,11)" fg:x="1111" fg:w="10"/><text x="83.6584%" y="575.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.75%)</title><rect x="83.4084%" y="549" width="0.7508%" height="15" fill="rgb(254,105,39)" fg:x="1111" fg:w="10"/><text x="83.6584%" y="559.50"></text></g><g><title>__rust_alloc (1 samples, 0.08%)</title><rect x="84.0841%" y="533" width="0.0751%" height="15" fill="rgb(245,158,5)" fg:x="1120" fg:w="1"/><text x="84.3341%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.08%)</title><rect x="84.1592%" y="613" width="0.0751%" height="15" fill="rgb(249,208,11)" fg:x="1121" fg:w="1"/><text x="84.4092%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.08%)</title><rect x="84.1592%" y="597" width="0.0751%" height="15" fill="rgb(210,39,28)" fg:x="1121" fg:w="1"/><text x="84.4092%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (27 samples, 2.03%)</title><rect x="84.2342%" y="613" width="2.0270%" height="15" fill="rgb(211,56,53)" fg:x="1122" fg:w="27"/><text x="84.4842%" y="623.50">c..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 2.03%)</title><rect x="84.2342%" y="597" width="2.0270%" height="15" fill="rgb(226,201,30)" fg:x="1122" fg:w="27"/><text x="84.4842%" y="607.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.08%)</title><rect x="86.2613%" y="613" width="0.0751%" height="15" fill="rgb(239,101,34)" fg:x="1149" fg:w="1"/><text x="86.5113%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.08%)</title><rect x="86.2613%" y="597" width="0.0751%" height="15" fill="rgb(226,209,5)" fg:x="1149" fg:w="1"/><text x="86.5113%" y="607.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (13 samples, 0.98%)</title><rect x="86.3363%" y="613" width="0.9760%" height="15" fill="rgb(250,105,47)" fg:x="1150" fg:w="13"/><text x="86.5863%" y="623.50"></text></g><g><title>__GI___sched_yield (13 samples, 0.98%)</title><rect x="86.3363%" y="597" width="0.9760%" height="15" fill="rgb(230,72,3)" fg:x="1150" fg:w="13"/><text x="86.5863%" y="607.50"></text></g><g><title>[unknown] (13 samples, 0.98%)</title><rect x="86.3363%" y="581" width="0.9760%" height="15" fill="rgb(232,218,39)" fg:x="1150" fg:w="13"/><text x="86.5863%" y="591.50"></text></g><g><title>[unknown] (13 samples, 0.98%)</title><rect x="86.3363%" y="565" width="0.9760%" height="15" fill="rgb(248,166,6)" fg:x="1150" fg:w="13"/><text x="86.5863%" y="575.50"></text></g><g><title>[unknown] (13 samples, 0.98%)</title><rect x="86.3363%" y="549" width="0.9760%" height="15" fill="rgb(247,89,20)" fg:x="1150" fg:w="13"/><text x="86.5863%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.90%)</title><rect x="86.4114%" y="533" width="0.9009%" height="15" fill="rgb(248,130,54)" fg:x="1151" fg:w="12"/><text x="86.6614%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.90%)</title><rect x="86.4114%" y="517" width="0.9009%" height="15" fill="rgb(234,196,4)" fg:x="1151" fg:w="12"/><text x="86.6614%" y="527.50"></text></g><g><title>[unknown] (12 samples, 0.90%)</title><rect x="86.4114%" y="501" width="0.9009%" height="15" fill="rgb(250,143,31)" fg:x="1151" fg:w="12"/><text x="86.6614%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="86.4865%" y="485" width="0.8258%" height="15" fill="rgb(211,110,34)" fg:x="1152" fg:w="11"/><text x="86.7365%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="86.4865%" y="469" width="0.8258%" height="15" fill="rgb(215,124,48)" fg:x="1152" fg:w="11"/><text x="86.7365%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="86.4865%" y="453" width="0.8258%" height="15" fill="rgb(216,46,13)" fg:x="1152" fg:w="11"/><text x="86.7365%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="86.4865%" y="437" width="0.8258%" height="15" fill="rgb(205,184,25)" fg:x="1152" fg:w="11"/><text x="86.7365%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="86.4865%" y="421" width="0.8258%" height="15" fill="rgb(228,1,10)" fg:x="1152" fg:w="11"/><text x="86.7365%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="86.4865%" y="405" width="0.8258%" height="15" fill="rgb(213,116,27)" fg:x="1152" fg:w="11"/><text x="86.7365%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.38%)</title><rect x="87.3123%" y="597" width="0.3754%" height="15" fill="rgb(241,95,50)" fg:x="1163" fg:w="5"/><text x="87.5623%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.38%)</title><rect x="87.3123%" y="581" width="0.3754%" height="15" fill="rgb(238,48,32)" fg:x="1163" fg:w="5"/><text x="87.5623%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (5 samples, 0.38%)</title><rect x="87.3123%" y="565" width="0.3754%" height="15" fill="rgb(235,113,49)" fg:x="1163" fg:w="5"/><text x="87.5623%" y="575.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (106 samples, 7.96%)</title><rect x="80.9309%" y="629" width="7.9580%" height="15" fill="rgb(205,127,43)" fg:x="1078" fg:w="106"/><text x="81.1809%" y="639.50">crossbeam_c..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (21 samples, 1.58%)</title><rect x="87.3123%" y="613" width="1.5766%" height="15" fill="rgb(250,162,2)" fg:x="1163" fg:w="21"/><text x="87.5623%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (16 samples, 1.20%)</title><rect x="87.6877%" y="597" width="1.2012%" height="15" fill="rgb(220,13,41)" fg:x="1168" fg:w="16"/><text x="87.9377%" y="607.50"></text></g><g><title>core::hint::spin_loop (16 samples, 1.20%)</title><rect x="87.6877%" y="581" width="1.2012%" height="15" fill="rgb(249,221,25)" fg:x="1168" fg:w="16"/><text x="87.9377%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (16 samples, 1.20%)</title><rect x="87.6877%" y="565" width="1.2012%" height="15" fill="rgb(215,208,19)" fg:x="1168" fg:w="16"/><text x="87.9377%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.23%)</title><rect x="88.8889%" y="613" width="0.2252%" height="15" fill="rgb(236,175,2)" fg:x="1184" fg:w="3"/><text x="89.1389%" y="623.50"></text></g><g><title>core::ptr::write (3 samples, 0.23%)</title><rect x="88.8889%" y="597" width="0.2252%" height="15" fill="rgb(241,52,2)" fg:x="1184" fg:w="3"/><text x="89.1389%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="89.0390%" y="581" width="0.0751%" height="15" fill="rgb(248,140,14)" fg:x="1186" fg:w="1"/><text x="89.2890%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="89.0390%" y="565" width="0.0751%" height="15" fill="rgb(253,22,42)" fg:x="1186" fg:w="1"/><text x="89.2890%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="89.0390%" y="549" width="0.0751%" height="15" fill="rgb(234,61,47)" fg:x="1186" fg:w="1"/><text x="89.2890%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="89.0390%" y="533" width="0.0751%" height="15" fill="rgb(208,226,15)" fg:x="1186" fg:w="1"/><text x="89.2890%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.08%)</title><rect x="89.1141%" y="613" width="0.0751%" height="15" fill="rgb(217,221,4)" fg:x="1187" fg:w="1"/><text x="89.3641%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.08%)</title><rect x="89.1141%" y="597" width="0.0751%" height="15" fill="rgb(212,174,34)" fg:x="1187" fg:w="1"/><text x="89.3641%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.08%)</title><rect x="89.1141%" y="581" width="0.0751%" height="15" fill="rgb(253,83,4)" fg:x="1187" fg:w="1"/><text x="89.3641%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (31 samples, 2.33%)</title><rect x="89.1892%" y="613" width="2.3273%" height="15" fill="rgb(250,195,49)" fg:x="1188" fg:w="31"/><text x="89.4392%" y="623.50">c..</text></g><g><title>core::sync::atomic::atomic_or (31 samples, 2.33%)</title><rect x="89.1892%" y="597" width="2.3273%" height="15" fill="rgb(241,192,25)" fg:x="1188" fg:w="31"/><text x="89.4392%" y="607.50">c..</text></g><g><title>core::sync::atomic::AtomicBool::load (7 samples, 0.53%)</title><rect x="91.5165%" y="597" width="0.5255%" height="15" fill="rgb(208,124,10)" fg:x="1219" fg:w="7"/><text x="91.7665%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.53%)</title><rect x="91.5165%" y="581" width="0.5255%" height="15" fill="rgb(222,33,0)" fg:x="1219" fg:w="7"/><text x="91.7665%" y="591.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (186 samples, 13.96%)</title><rect x="78.6036%" y="661" width="13.9640%" height="15" fill="rgb(234,209,28)" fg:x="1047" fg:w="186"/><text x="78.8536%" y="671.50">crossbeam_channel::ch..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (158 samples, 11.86%)</title><rect x="80.7057%" y="645" width="11.8619%" height="15" fill="rgb(224,11,23)" fg:x="1075" fg:w="158"/><text x="80.9557%" y="655.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (49 samples, 3.68%)</title><rect x="88.8889%" y="629" width="3.6787%" height="15" fill="rgb(232,99,1)" fg:x="1184" fg:w="49"/><text x="89.1389%" y="639.50">cros..</text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (14 samples, 1.05%)</title><rect x="91.5165%" y="613" width="1.0511%" height="15" fill="rgb(237,95,45)" fg:x="1219" fg:w="14"/><text x="91.7665%" y="623.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (7 samples, 0.53%)</title><rect x="92.0420%" y="597" width="0.5255%" height="15" fill="rgb(208,109,11)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="607.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (7 samples, 0.53%)</title><rect x="92.0420%" y="581" width="0.5255%" height="15" fill="rgb(216,190,48)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="591.50"></text></g><g><title>__GI___sched_yield (7 samples, 0.53%)</title><rect x="92.0420%" y="565" width="0.5255%" height="15" fill="rgb(251,171,36)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="92.0420%" y="549" width="0.5255%" height="15" fill="rgb(230,62,22)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="92.0420%" y="533" width="0.5255%" height="15" fill="rgb(225,114,35)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="92.0420%" y="517" width="0.5255%" height="15" fill="rgb(215,118,42)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="92.0420%" y="501" width="0.5255%" height="15" fill="rgb(243,119,21)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="92.0420%" y="485" width="0.5255%" height="15" fill="rgb(252,177,53)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.53%)</title><rect x="92.0420%" y="469" width="0.5255%" height="15" fill="rgb(237,209,29)" fg:x="1226" fg:w="7"/><text x="92.2920%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="92.1171%" y="453" width="0.4505%" height="15" fill="rgb(212,65,23)" fg:x="1227" fg:w="6"/><text x="92.3671%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="92.1171%" y="437" width="0.4505%" height="15" fill="rgb(230,222,46)" fg:x="1227" fg:w="6"/><text x="92.3671%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="92.1171%" y="421" width="0.4505%" height="15" fill="rgb(215,135,32)" fg:x="1227" fg:w="6"/><text x="92.3671%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="92.1171%" y="405" width="0.4505%" height="15" fill="rgb(246,101,22)" fg:x="1227" fg:w="6"/><text x="92.3671%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="92.1171%" y="389" width="0.4505%" height="15" fill="rgb(206,107,13)" fg:x="1227" fg:w="6"/><text x="92.3671%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="92.1171%" y="373" width="0.4505%" height="15" fill="rgb(250,100,44)" fg:x="1227" fg:w="6"/><text x="92.3671%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="92.5676%" y="629" width="0.0751%" height="15" fill="rgb(231,147,38)" fg:x="1233" fg:w="1"/><text x="92.8176%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="92.5676%" y="613" width="0.0751%" height="15" fill="rgb(229,8,40)" fg:x="1233" fg:w="1"/><text x="92.8176%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.5676%" y="597" width="0.0751%" height="15" fill="rgb(221,135,30)" fg:x="1233" fg:w="1"/><text x="92.8176%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="92.5676%" y="581" width="0.0751%" height="15" fill="rgb(249,193,18)" fg:x="1233" fg:w="1"/><text x="92.8176%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="92.5676%" y="565" width="0.0751%" height="15" fill="rgb(209,133,39)" fg:x="1233" fg:w="1"/><text x="92.8176%" y="575.50"></text></g><g><title>__rust_dealloc (1 samples, 0.08%)</title><rect x="92.5676%" y="549" width="0.0751%" height="15" fill="rgb(232,100,14)" fg:x="1233" fg:w="1"/><text x="92.8176%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="92.7177%" y="437" width="0.2252%" height="15" fill="rgb(224,185,1)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.23%)</title><rect x="92.7177%" y="421" width="0.2252%" height="15" fill="rgb(223,139,8)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="92.7177%" y="405" width="0.2252%" height="15" fill="rgb(232,213,38)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="92.7177%" y="389" width="0.2252%" height="15" fill="rgb(207,94,22)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="92.7177%" y="373" width="0.2252%" height="15" fill="rgb(219,183,54)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.23%)</title><rect x="92.7177%" y="357" width="0.2252%" height="15" fill="rgb(216,185,54)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (3 samples, 0.23%)</title><rect x="92.7177%" y="341" width="0.2252%" height="15" fill="rgb(254,217,39)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.23%)</title><rect x="92.7177%" y="325" width="0.2252%" height="15" fill="rgb(240,178,23)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (3 samples, 0.23%)</title><rect x="92.7177%" y="309" width="0.2252%" height="15" fill="rgb(218,11,47)" fg:x="1235" fg:w="3"/><text x="92.9677%" y="319.50"></text></g><g><title>hex::val (1 samples, 0.08%)</title><rect x="92.8679%" y="293" width="0.0751%" height="15" fill="rgb(218,51,51)" fg:x="1237" fg:w="1"/><text x="93.1179%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.45%)</title><rect x="92.6426%" y="469" width="0.4505%" height="15" fill="rgb(238,126,27)" fg:x="1234" fg:w="6"/><text x="92.8926%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.45%)</title><rect x="92.6426%" y="453" width="0.4505%" height="15" fill="rgb(249,202,22)" fg:x="1234" fg:w="6"/><text x="92.8926%" y="463.50"></text></g><g><title>core::ptr::write (2 samples, 0.15%)</title><rect x="92.9429%" y="437" width="0.1502%" height="15" fill="rgb(254,195,49)" fg:x="1238" fg:w="2"/><text x="93.1929%" y="447.50"></text></g><g><title>hex::decode (7 samples, 0.53%)</title><rect x="92.6426%" y="629" width="0.5255%" height="15" fill="rgb(208,123,14)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (7 samples, 0.53%)</title><rect x="92.6426%" y="613" width="0.5255%" height="15" fill="rgb(224,200,8)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.53%)</title><rect x="92.6426%" y="597" width="0.5255%" height="15" fill="rgb(217,61,36)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7 samples, 0.53%)</title><rect x="92.6426%" y="581" width="0.5255%" height="15" fill="rgb(206,35,45)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.53%)</title><rect x="92.6426%" y="565" width="0.5255%" height="15" fill="rgb(217,65,33)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (7 samples, 0.53%)</title><rect x="92.6426%" y="549" width="0.5255%" height="15" fill="rgb(222,158,48)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.53%)</title><rect x="92.6426%" y="533" width="0.5255%" height="15" fill="rgb(254,2,54)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.53%)</title><rect x="92.6426%" y="517" width="0.5255%" height="15" fill="rgb(250,143,38)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.53%)</title><rect x="92.6426%" y="501" width="0.5255%" height="15" fill="rgb(248,25,0)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.53%)</title><rect x="92.6426%" y="485" width="0.5255%" height="15" fill="rgb(206,152,27)" fg:x="1234" fg:w="7"/><text x="92.8926%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.0931%" y="469" width="0.0751%" height="15" fill="rgb(240,77,30)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.08%)</title><rect x="93.0931%" y="453" width="0.0751%" height="15" fill="rgb(231,5,3)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="93.0931%" y="437" width="0.0751%" height="15" fill="rgb(207,226,32)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="93.0931%" y="421" width="0.0751%" height="15" fill="rgb(222,207,47)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="93.0931%" y="405" width="0.0751%" height="15" fill="rgb(229,115,45)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.08%)</title><rect x="93.0931%" y="389" width="0.0751%" height="15" fill="rgb(224,191,6)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.08%)</title><rect x="93.0931%" y="373" width="0.0751%" height="15" fill="rgb(230,227,24)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.08%)</title><rect x="93.0931%" y="357" width="0.0751%" height="15" fill="rgb(228,80,19)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (1 samples, 0.08%)</title><rect x="93.0931%" y="341" width="0.0751%" height="15" fill="rgb(247,229,0)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="351.50"></text></g><g><title>hex::val (1 samples, 0.08%)</title><rect x="93.0931%" y="325" width="0.0751%" height="15" fill="rgb(237,194,15)" fg:x="1240" fg:w="1"/><text x="93.3431%" y="335.50"></text></g><g><title>lab4::checksum::Checksum::update (11 samples, 0.83%)</title><rect x="92.5676%" y="645" width="0.8258%" height="15" fill="rgb(219,203,20)" fg:x="1233" fg:w="11"/><text x="92.8176%" y="655.50"></text></g><g><title>hex::encode (3 samples, 0.23%)</title><rect x="93.1682%" y="629" width="0.2252%" height="15" fill="rgb(234,128,8)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="639.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (3 samples, 0.23%)</title><rect x="93.1682%" y="613" width="0.2252%" height="15" fill="rgb(248,202,8)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="623.50"></text></g><g><title>hex::encode_to_iter (3 samples, 0.23%)</title><rect x="93.1682%" y="597" width="0.2252%" height="15" fill="rgb(206,104,37)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.23%)</title><rect x="93.1682%" y="581" width="0.2252%" height="15" fill="rgb(223,8,27)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="93.1682%" y="565" width="0.2252%" height="15" fill="rgb(216,217,28)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (3 samples, 0.23%)</title><rect x="93.1682%" y="549" width="0.2252%" height="15" fill="rgb(249,199,1)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.23%)</title><rect x="93.1682%" y="533" width="0.2252%" height="15" fill="rgb(240,85,17)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.23%)</title><rect x="93.1682%" y="517" width="0.2252%" height="15" fill="rgb(206,108,45)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="527.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="93.1682%" y="501" width="0.2252%" height="15" fill="rgb(245,210,41)" fg:x="1241" fg:w="3"/><text x="93.4182%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.15%)</title><rect x="93.2432%" y="485" width="0.1502%" height="15" fill="rgb(206,13,37)" fg:x="1242" fg:w="2"/><text x="93.4932%" y="495.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.15%)</title><rect x="93.2432%" y="469" width="0.1502%" height="15" fill="rgb(250,61,18)" fg:x="1242" fg:w="2"/><text x="93.4932%" y="479.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (1 samples, 0.08%)</title><rect x="93.3934%" y="629" width="0.0751%" height="15" fill="rgb(235,172,48)" fg:x="1244" fg:w="1"/><text x="93.6434%" y="639.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.08%)</title><rect x="93.3934%" y="613" width="0.0751%" height="15" fill="rgb(249,201,17)" fg:x="1244" fg:w="1"/><text x="93.6434%" y="623.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.08%)</title><rect x="93.3934%" y="597" width="0.0751%" height="15" fill="rgb(219,208,6)" fg:x="1244" fg:w="1"/><text x="93.6434%" y="607.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.08%)</title><rect x="93.3934%" y="581" width="0.0751%" height="15" fill="rgb(248,31,23)" fg:x="1244" fg:w="1"/><text x="93.6434%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.08%)</title><rect x="93.3934%" y="565" width="0.0751%" height="15" fill="rgb(245,15,42)" fg:x="1244" fg:w="1"/><text x="93.6434%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.3934%" y="549" width="0.0751%" height="15" fill="rgb(222,217,39)" fg:x="1244" fg:w="1"/><text x="93.6434%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="93.3934%" y="533" width="0.0751%" height="15" fill="rgb(210,219,27)" fg:x="1244" fg:w="1"/><text x="93.6434%" y="543.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (2 samples, 0.15%)</title><rect x="93.3934%" y="645" width="0.1502%" height="15" fill="rgb(252,166,36)" fg:x="1244" fg:w="2"/><text x="93.6434%" y="655.50"></text></g><g><title>hex::encode (1 samples, 0.08%)</title><rect x="93.4685%" y="629" width="0.0751%" height="15" fill="rgb(245,132,34)" fg:x="1245" fg:w="1"/><text x="93.7185%" y="639.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (1 samples, 0.08%)</title><rect x="93.4685%" y="613" width="0.0751%" height="15" fill="rgb(236,54,3)" fg:x="1245" fg:w="1"/><text x="93.7185%" y="623.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.08%)</title><rect x="93.4685%" y="597" width="0.0751%" height="15" fill="rgb(241,173,43)" fg:x="1245" fg:w="1"/><text x="93.7185%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="93.4685%" y="581" width="0.0751%" height="15" fill="rgb(215,190,9)" fg:x="1245" fg:w="1"/><text x="93.7185%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.4685%" y="565" width="0.0751%" height="15" fill="rgb(242,101,16)" fg:x="1245" fg:w="1"/><text x="93.7185%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="93.4685%" y="549" width="0.0751%" height="15" fill="rgb(223,190,21)" fg:x="1245" fg:w="1"/><text x="93.7185%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.08%)</title><rect x="93.4685%" y="533" width="0.0751%" height="15" fill="rgb(215,228,25)" fg:x="1245" fg:w="1"/><text x="93.7185%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="93.4685%" y="517" width="0.0751%" height="15" fill="rgb(225,36,22)" fg:x="1245" fg:w="1"/><text x="93.7185%" y="527.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1 samples, 0.08%)</title><rect x="93.5435%" y="549" width="0.0751%" height="15" fill="rgb(251,106,46)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.5435%" y="533" width="0.0751%" height="15" fill="rgb(208,90,1)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="543.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.5435%" y="517" width="0.0751%" height="15" fill="rgb(243,10,4)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="93.5435%" y="501" width="0.0751%" height="15" fill="rgb(212,137,27)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="511.50"></text></g><g><title>__libc_write (1 samples, 0.08%)</title><rect x="93.5435%" y="485" width="0.0751%" height="15" fill="rgb(231,220,49)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="495.50"></text></g><g><title>__libc_write (1 samples, 0.08%)</title><rect x="93.5435%" y="469" width="0.0751%" height="15" fill="rgb(237,96,20)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="453" width="0.0751%" height="15" fill="rgb(239,229,30)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="437" width="0.0751%" height="15" fill="rgb(219,65,33)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="421" width="0.0751%" height="15" fill="rgb(243,134,7)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="405" width="0.0751%" height="15" fill="rgb(216,177,54)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="389" width="0.0751%" height="15" fill="rgb(211,160,20)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="373" width="0.0751%" height="15" fill="rgb(239,85,39)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="357" width="0.0751%" height="15" fill="rgb(232,125,22)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="341" width="0.0751%" height="15" fill="rgb(244,57,34)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="325" width="0.0751%" height="15" fill="rgb(214,203,32)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="309" width="0.0751%" height="15" fill="rgb(207,58,43)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="293" width="0.0751%" height="15" fill="rgb(215,193,15)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="277" width="0.0751%" height="15" fill="rgb(232,15,44)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="261" width="0.0751%" height="15" fill="rgb(212,3,48)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="245" width="0.0751%" height="15" fill="rgb(218,128,7)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="229" width="0.0751%" height="15" fill="rgb(226,216,39)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="213" width="0.0751%" height="15" fill="rgb(243,47,51)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="197" width="0.0751%" height="15" fill="rgb(241,183,40)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="181" width="0.0751%" height="15" fill="rgb(231,217,32)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.5435%" y="165" width="0.0751%" height="15" fill="rgb(229,61,38)" fg:x="1246" fg:w="1"/><text x="93.7935%" y="175.50"></text></g><g><title>std::io::Write::write_fmt (12 samples, 0.90%)</title><rect x="93.5435%" y="645" width="0.9009%" height="15" fill="rgb(225,210,5)" fg:x="1246" fg:w="12"/><text x="93.7935%" y="655.50"></text></g><g><title>core::fmt::write (12 samples, 0.90%)</title><rect x="93.5435%" y="629" width="0.9009%" height="15" fill="rgb(231,79,45)" fg:x="1246" fg:w="12"/><text x="93.7935%" y="639.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (12 samples, 0.90%)</title><rect x="93.5435%" y="613" width="0.9009%" height="15" fill="rgb(224,100,7)" fg:x="1246" fg:w="12"/><text x="93.7935%" y="623.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (12 samples, 0.90%)</title><rect x="93.5435%" y="597" width="0.9009%" height="15" fill="rgb(241,198,18)" fg:x="1246" fg:w="12"/><text x="93.7935%" y="607.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (12 samples, 0.90%)</title><rect x="93.5435%" y="581" width="0.9009%" height="15" fill="rgb(252,97,53)" fg:x="1246" fg:w="12"/><text x="93.7935%" y="591.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (12 samples, 0.90%)</title><rect x="93.5435%" y="565" width="0.9009%" height="15" fill="rgb(220,88,7)" fg:x="1246" fg:w="12"/><text x="93.7935%" y="575.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (11 samples, 0.83%)</title><rect x="93.6186%" y="549" width="0.8258%" height="15" fill="rgb(213,176,14)" fg:x="1247" fg:w="11"/><text x="93.8686%" y="559.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (11 samples, 0.83%)</title><rect x="93.6186%" y="533" width="0.8258%" height="15" fill="rgb(246,73,7)" fg:x="1247" fg:w="11"/><text x="93.8686%" y="543.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (11 samples, 0.83%)</title><rect x="93.6186%" y="517" width="0.8258%" height="15" fill="rgb(245,64,36)" fg:x="1247" fg:w="11"/><text x="93.8686%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (11 samples, 0.83%)</title><rect x="93.6186%" y="501" width="0.8258%" height="15" fill="rgb(245,80,10)" fg:x="1247" fg:w="11"/><text x="93.8686%" y="511.50"></text></g><g><title>__libc_write (11 samples, 0.83%)</title><rect x="93.6186%" y="485" width="0.8258%" height="15" fill="rgb(232,107,50)" fg:x="1247" fg:w="11"/><text x="93.8686%" y="495.50"></text></g><g><title>__libc_write (11 samples, 0.83%)</title><rect x="93.6186%" y="469" width="0.8258%" height="15" fill="rgb(253,3,0)" fg:x="1247" fg:w="11"/><text x="93.8686%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.83%)</title><rect x="93.6186%" y="453" width="0.8258%" height="15" fill="rgb(212,99,53)" fg:x="1247" fg:w="11"/><text x="93.8686%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.75%)</title><rect x="93.6937%" y="437" width="0.7508%" height="15" fill="rgb(249,111,54)" fg:x="1248" fg:w="10"/><text x="93.9437%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.75%)</title><rect x="93.6937%" y="421" width="0.7508%" height="15" fill="rgb(249,55,30)" fg:x="1248" fg:w="10"/><text x="93.9437%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="93.8438%" y="405" width="0.6006%" height="15" fill="rgb(237,47,42)" fg:x="1250" fg:w="8"/><text x="94.0938%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="93.8438%" y="389" width="0.6006%" height="15" fill="rgb(211,20,18)" fg:x="1250" fg:w="8"/><text x="94.0938%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="93.8438%" y="373" width="0.6006%" height="15" fill="rgb(231,203,46)" fg:x="1250" fg:w="8"/><text x="94.0938%" y="383.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="93.8438%" y="357" width="0.6006%" height="15" fill="rgb(237,142,3)" fg:x="1250" fg:w="8"/><text x="94.0938%" y="367.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="93.8438%" y="341" width="0.6006%" height="15" fill="rgb(241,107,1)" fg:x="1250" fg:w="8"/><text x="94.0938%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="93.8438%" y="325" width="0.6006%" height="15" fill="rgb(229,83,13)" fg:x="1250" fg:w="8"/><text x="94.0938%" y="335.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="93.8438%" y="309" width="0.6006%" height="15" fill="rgb(241,91,40)" fg:x="1250" fg:w="8"/><text x="94.0938%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="93.9940%" y="293" width="0.4505%" height="15" fill="rgb(225,3,45)" fg:x="1252" fg:w="6"/><text x="94.2440%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="93.9940%" y="277" width="0.4505%" height="15" fill="rgb(244,223,14)" fg:x="1252" fg:w="6"/><text x="94.2440%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="94.0691%" y="261" width="0.3754%" height="15" fill="rgb(224,124,37)" fg:x="1253" fg:w="5"/><text x="94.3191%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="94.0691%" y="245" width="0.3754%" height="15" fill="rgb(251,171,30)" fg:x="1253" fg:w="5"/><text x="94.3191%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="94.1441%" y="229" width="0.3003%" height="15" fill="rgb(236,46,54)" fg:x="1254" fg:w="4"/><text x="94.3941%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="94.1441%" y="213" width="0.3003%" height="15" fill="rgb(245,213,5)" fg:x="1254" fg:w="4"/><text x="94.3941%" y="223.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="94.1441%" y="197" width="0.3003%" height="15" fill="rgb(230,144,27)" fg:x="1254" fg:w="4"/><text x="94.3941%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="94.2192%" y="181" width="0.2252%" height="15" fill="rgb(220,86,6)" fg:x="1255" fg:w="3"/><text x="94.4692%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.2943%" y="165" width="0.1502%" height="15" fill="rgb(240,20,13)" fg:x="1256" fg:w="2"/><text x="94.5443%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.2943%" y="149" width="0.1502%" height="15" fill="rgb(217,89,34)" fg:x="1256" fg:w="2"/><text x="94.5443%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.2943%" y="133" width="0.1502%" height="15" fill="rgb(229,13,5)" fg:x="1256" fg:w="2"/><text x="94.5443%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.3694%" y="117" width="0.0751%" height="15" fill="rgb(244,67,35)" fg:x="1257" fg:w="1"/><text x="94.6194%" y="127.50"></text></g><g><title>std::panic::catch_unwind (1,169 samples, 87.76%)</title><rect x="9.0090%" y="789" width="87.7628%" height="15" fill="rgb(221,40,2)" fg:x="120" fg:w="1169"/><text x="9.2590%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,169 samples, 87.76%)</title><rect x="9.0090%" y="773" width="87.7628%" height="15" fill="rgb(237,157,21)" fg:x="120" fg:w="1169"/><text x="9.2590%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,169 samples, 87.76%)</title><rect x="9.0090%" y="757" width="87.7628%" height="15" fill="rgb(222,94,11)" fg:x="120" fg:w="1169"/><text x="9.2590%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,169 samples, 87.76%)</title><rect x="9.0090%" y="741" width="87.7628%" height="15" fill="rgb(249,113,6)" fg:x="120" fg:w="1169"/><text x="9.2590%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,169 samples, 87.76%)</title><rect x="9.0090%" y="725" width="87.7628%" height="15" fill="rgb(238,137,36)" fg:x="120" fg:w="1169"/><text x="9.2590%" y="735.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,169 samples, 87.76%)</title><rect x="9.0090%" y="709" width="87.7628%" height="15" fill="rgb(210,102,26)" fg:x="120" fg:w="1169"/><text x="9.2590%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (1,169 samples, 87.76%)</title><rect x="9.0090%" y="693" width="87.7628%" height="15" fill="rgb(218,30,30)" fg:x="120" fg:w="1169"/><text x="9.2590%" y="703.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (569 samples, 42.72%)</title><rect x="54.0541%" y="677" width="42.7177%" height="15" fill="rgb(214,67,26)" fg:x="720" fg:w="569"/><text x="54.3041%" y="687.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (56 samples, 4.20%)</title><rect x="92.5676%" y="661" width="4.2042%" height="15" fill="rgb(251,9,53)" fg:x="1233" fg:w="56"/><text x="92.8176%" y="671.50">lab4:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 2.33%)</title><rect x="94.4444%" y="645" width="2.3273%" height="15" fill="rgb(228,204,25)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="655.50">s..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (31 samples, 2.33%)</title><rect x="94.4444%" y="629" width="2.3273%" height="15" fill="rgb(207,153,8)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="639.50">s..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (31 samples, 2.33%)</title><rect x="94.4444%" y="613" width="2.3273%" height="15" fill="rgb(242,9,16)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="623.50">s..</text></g><g><title>std::sys::unix::futex::futex_wait (31 samples, 2.33%)</title><rect x="94.4444%" y="597" width="2.3273%" height="15" fill="rgb(217,211,10)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="607.50">s..</text></g><g><title>syscall (31 samples, 2.33%)</title><rect x="94.4444%" y="581" width="2.3273%" height="15" fill="rgb(219,228,52)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="591.50">s..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="565" width="2.3273%" height="15" fill="rgb(231,92,29)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="575.50">[..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="549" width="2.3273%" height="15" fill="rgb(232,8,23)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="559.50">[..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="533" width="2.3273%" height="15" fill="rgb(216,211,34)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="543.50">[..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="517" width="2.3273%" height="15" fill="rgb(236,151,0)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="527.50">[..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="501" width="2.3273%" height="15" fill="rgb(209,168,3)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="511.50">[..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="485" width="2.3273%" height="15" fill="rgb(208,129,28)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="495.50">[..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="469" width="2.3273%" height="15" fill="rgb(229,78,22)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="479.50">[..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="453" width="2.3273%" height="15" fill="rgb(228,187,13)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="463.50">[..</text></g><g><title>[unknown] (31 samples, 2.33%)</title><rect x="94.4444%" y="437" width="2.3273%" height="15" fill="rgb(240,119,24)" fg:x="1258" fg:w="31"/><text x="94.6944%" y="447.50">[..</text></g><g><title>[unknown] (29 samples, 2.18%)</title><rect x="94.5946%" y="421" width="2.1772%" height="15" fill="rgb(209,194,42)" fg:x="1260" fg:w="29"/><text x="94.8446%" y="431.50">[..</text></g><g><title>[unknown] (28 samples, 2.10%)</title><rect x="94.6697%" y="405" width="2.1021%" height="15" fill="rgb(247,200,46)" fg:x="1261" fg:w="28"/><text x="94.9197%" y="415.50">[..</text></g><g><title>[unknown] (27 samples, 2.03%)</title><rect x="94.7447%" y="389" width="2.0270%" height="15" fill="rgb(218,76,16)" fg:x="1262" fg:w="27"/><text x="94.9947%" y="399.50">[..</text></g><g><title>[unknown] (27 samples, 2.03%)</title><rect x="94.7447%" y="373" width="2.0270%" height="15" fill="rgb(225,21,48)" fg:x="1262" fg:w="27"/><text x="94.9947%" y="383.50">[..</text></g><g><title>[unknown] (27 samples, 2.03%)</title><rect x="94.7447%" y="357" width="2.0270%" height="15" fill="rgb(239,223,50)" fg:x="1262" fg:w="27"/><text x="94.9947%" y="367.50">[..</text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="96.7718%" y="693" width="0.1502%" height="15" fill="rgb(244,45,21)" fg:x="1289" fg:w="2"/><text x="97.0218%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="677" width="0.0751%" height="15" fill="rgb(232,33,43)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="661" width="0.0751%" height="15" fill="rgb(209,8,3)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="645" width="0.0751%" height="15" fill="rgb(214,25,53)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="629" width="0.0751%" height="15" fill="rgb(254,186,54)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="613" width="0.0751%" height="15" fill="rgb(208,174,49)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="597" width="0.0751%" height="15" fill="rgb(233,191,51)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="581" width="0.0751%" height="15" fill="rgb(222,134,10)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="565" width="0.0751%" height="15" fill="rgb(230,226,20)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.8468%" y="549" width="0.0751%" height="15" fill="rgb(251,111,25)" fg:x="1290" fg:w="1"/><text x="97.0968%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,177 samples, 88.36%)</title><rect x="9.0090%" y="853" width="88.3634%" height="15" fill="rgb(224,40,46)" fg:x="120" fg:w="1177"/><text x="9.2590%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,177 samples, 88.36%)</title><rect x="9.0090%" y="837" width="88.3634%" height="15" fill="rgb(236,108,47)" fg:x="120" fg:w="1177"/><text x="9.2590%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,177 samples, 88.36%)</title><rect x="9.0090%" y="821" width="88.3634%" height="15" fill="rgb(234,93,0)" fg:x="120" fg:w="1177"/><text x="9.2590%" y="831.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,177 samples, 88.36%)</title><rect x="9.0090%" y="805" width="88.3634%" height="15" fill="rgb(224,213,32)" fg:x="120" fg:w="1177"/><text x="9.2590%" y="815.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (8 samples, 0.60%)</title><rect x="96.7718%" y="789" width="0.6006%" height="15" fill="rgb(251,11,48)" fg:x="1289" fg:w="8"/><text x="97.0218%" y="799.50"></text></g><g><title>pthread_getattr_np (8 samples, 0.60%)</title><rect x="96.7718%" y="773" width="0.6006%" height="15" fill="rgb(236,173,5)" fg:x="1289" fg:w="8"/><text x="97.0218%" y="783.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.60%)</title><rect x="96.7718%" y="757" width="0.6006%" height="15" fill="rgb(230,95,12)" fg:x="1289" fg:w="8"/><text x="97.0218%" y="767.50"></text></g><g><title>tcache_init.part.0 (8 samples, 0.60%)</title><rect x="96.7718%" y="741" width="0.6006%" height="15" fill="rgb(232,209,1)" fg:x="1289" fg:w="8"/><text x="97.0218%" y="751.50"></text></g><g><title>arena_get2.part.0 (8 samples, 0.60%)</title><rect x="96.7718%" y="725" width="0.6006%" height="15" fill="rgb(232,6,1)" fg:x="1289" fg:w="8"/><text x="97.0218%" y="735.50"></text></g><g><title>new_heap (8 samples, 0.60%)</title><rect x="96.7718%" y="709" width="0.6006%" height="15" fill="rgb(210,224,50)" fg:x="1289" fg:w="8"/><text x="97.0218%" y="719.50"></text></g><g><title>__GI_munmap (6 samples, 0.45%)</title><rect x="96.9219%" y="693" width="0.4505%" height="15" fill="rgb(228,127,35)" fg:x="1291" fg:w="6"/><text x="97.1719%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="96.9219%" y="677" width="0.4505%" height="15" fill="rgb(245,102,45)" fg:x="1291" fg:w="6"/><text x="97.1719%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="96.9219%" y="661" width="0.4505%" height="15" fill="rgb(214,1,49)" fg:x="1291" fg:w="6"/><text x="97.1719%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="96.9219%" y="645" width="0.4505%" height="15" fill="rgb(226,163,40)" fg:x="1291" fg:w="6"/><text x="97.1719%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="96.9219%" y="629" width="0.4505%" height="15" fill="rgb(239,212,28)" fg:x="1291" fg:w="6"/><text x="97.1719%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="96.9219%" y="613" width="0.4505%" height="15" fill="rgb(220,20,13)" fg:x="1291" fg:w="6"/><text x="97.1719%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="96.9219%" y="597" width="0.4505%" height="15" fill="rgb(210,164,35)" fg:x="1291" fg:w="6"/><text x="97.1719%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="96.9219%" y="581" width="0.4505%" height="15" fill="rgb(248,109,41)" fg:x="1291" fg:w="6"/><text x="97.1719%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="96.9970%" y="565" width="0.3754%" height="15" fill="rgb(238,23,50)" fg:x="1292" fg:w="5"/><text x="97.2470%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="96.9970%" y="549" width="0.3754%" height="15" fill="rgb(211,48,49)" fg:x="1292" fg:w="5"/><text x="97.2470%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="96.9970%" y="533" width="0.3754%" height="15" fill="rgb(223,36,21)" fg:x="1292" fg:w="5"/><text x="97.2470%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="96.9970%" y="517" width="0.3754%" height="15" fill="rgb(207,123,46)" fg:x="1292" fg:w="5"/><text x="97.2470%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="96.9970%" y="501" width="0.3754%" height="15" fill="rgb(240,218,32)" fg:x="1292" fg:w="5"/><text x="97.2470%" y="511.50"></text></g><g><title>__sigaltstack (2 samples, 0.15%)</title><rect x="97.3724%" y="821" width="0.1502%" height="15" fill="rgb(252,5,43)" fg:x="1297" fg:w="2"/><text x="97.6224%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.3724%" y="805" width="0.1502%" height="15" fill="rgb(252,84,19)" fg:x="1297" fg:w="2"/><text x="97.6224%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="97.4474%" y="789" width="0.0751%" height="15" fill="rgb(243,152,39)" fg:x="1298" fg:w="1"/><text x="97.6974%" y="799.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.23%)</title><rect x="97.5225%" y="789" width="0.2252%" height="15" fill="rgb(234,160,15)" fg:x="1299" fg:w="3"/><text x="97.7725%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.5225%" y="773" width="0.2252%" height="15" fill="rgb(237,34,20)" fg:x="1299" fg:w="3"/><text x="97.7725%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.5225%" y="757" width="0.2252%" height="15" fill="rgb(229,97,13)" fg:x="1299" fg:w="3"/><text x="97.7725%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.5225%" y="741" width="0.2252%" height="15" fill="rgb(234,71,50)" fg:x="1299" fg:w="3"/><text x="97.7725%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.5225%" y="725" width="0.2252%" height="15" fill="rgb(253,155,4)" fg:x="1299" fg:w="3"/><text x="97.7725%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.5225%" y="709" width="0.2252%" height="15" fill="rgb(222,185,37)" fg:x="1299" fg:w="3"/><text x="97.7725%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.5225%" y="693" width="0.2252%" height="15" fill="rgb(251,177,13)" fg:x="1299" fg:w="3"/><text x="97.7725%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.5976%" y="677" width="0.1502%" height="15" fill="rgb(250,179,40)" fg:x="1300" fg:w="2"/><text x="97.8476%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="97.6727%" y="661" width="0.0751%" height="15" fill="rgb(242,44,2)" fg:x="1301" fg:w="1"/><text x="97.9227%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="97.6727%" y="645" width="0.0751%" height="15" fill="rgb(216,177,13)" fg:x="1301" fg:w="1"/><text x="97.9227%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="97.6727%" y="629" width="0.0751%" height="15" fill="rgb(216,106,43)" fg:x="1301" fg:w="1"/><text x="97.9227%" y="639.50"></text></g><g><title>__GI___clone (1,225 samples, 91.97%)</title><rect x="5.8559%" y="901" width="91.9670%" height="15" fill="rgb(216,183,2)" fg:x="78" fg:w="1225"/><text x="6.1059%" y="911.50">__GI___clone</text></g><g><title>start_thread (1,183 samples, 88.81%)</title><rect x="9.0090%" y="885" width="88.8138%" height="15" fill="rgb(249,75,3)" fg:x="120" fg:w="1183"/><text x="9.2590%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,183 samples, 88.81%)</title><rect x="9.0090%" y="869" width="88.8138%" height="15" fill="rgb(219,67,39)" fg:x="120" fg:w="1183"/><text x="9.2590%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (6 samples, 0.45%)</title><rect x="97.3724%" y="853" width="0.4505%" height="15" fill="rgb(253,228,2)" fg:x="1297" fg:w="6"/><text x="97.6224%" y="863.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (6 samples, 0.45%)</title><rect x="97.3724%" y="837" width="0.4505%" height="15" fill="rgb(235,138,27)" fg:x="1297" fg:w="6"/><text x="97.6224%" y="847.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (4 samples, 0.30%)</title><rect x="97.5225%" y="821" width="0.3003%" height="15" fill="rgb(236,97,51)" fg:x="1299" fg:w="4"/><text x="97.7725%" y="831.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (4 samples, 0.30%)</title><rect x="97.5225%" y="805" width="0.3003%" height="15" fill="rgb(240,80,30)" fg:x="1299" fg:w="4"/><text x="97.7725%" y="815.50"></text></g><g><title>__GI___mprotect (1 samples, 0.08%)</title><rect x="97.7477%" y="789" width="0.0751%" height="15" fill="rgb(230,178,19)" fg:x="1302" fg:w="1"/><text x="97.9977%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="97.7477%" y="773" width="0.0751%" height="15" fill="rgb(210,190,27)" fg:x="1302" fg:w="1"/><text x="97.9977%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.45%)</title><rect x="97.8228%" y="629" width="0.4505%" height="15" fill="rgb(222,107,31)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.45%)</title><rect x="97.8228%" y="613" width="0.4505%" height="15" fill="rgb(216,127,34)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.45%)</title><rect x="97.8228%" y="597" width="0.4505%" height="15" fill="rgb(234,116,52)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="607.50"></text></g><g><title>lab4::hackathon::{{closure}} (6 samples, 0.45%)</title><rect x="97.8228%" y="581" width="0.4505%" height="15" fill="rgb(222,124,15)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="591.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (6 samples, 0.45%)</title><rect x="97.8228%" y="565" width="0.4505%" height="15" fill="rgb(231,179,28)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="575.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (6 samples, 0.45%)</title><rect x="97.8228%" y="549" width="0.4505%" height="15" fill="rgb(226,93,45)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="559.50"></text></g><g><title>std::sys::unix::thread::Thread::join (6 samples, 0.45%)</title><rect x="97.8228%" y="533" width="0.4505%" height="15" fill="rgb(215,8,51)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="543.50"></text></g><g><title>__pthread_clockjoin_ex (6 samples, 0.45%)</title><rect x="97.8228%" y="517" width="0.4505%" height="15" fill="rgb(223,106,5)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="501" width="0.4505%" height="15" fill="rgb(250,191,5)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="485" width="0.4505%" height="15" fill="rgb(242,132,44)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="469" width="0.4505%" height="15" fill="rgb(251,152,29)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="453" width="0.4505%" height="15" fill="rgb(218,179,5)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="437" width="0.4505%" height="15" fill="rgb(227,67,19)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="421" width="0.4505%" height="15" fill="rgb(233,119,31)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="405" width="0.4505%" height="15" fill="rgb(241,120,22)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="389" width="0.4505%" height="15" fill="rgb(224,102,30)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.8228%" y="373" width="0.4505%" height="15" fill="rgb(210,164,37)" fg:x="1303" fg:w="6"/><text x="98.0728%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="97.8979%" y="357" width="0.3754%" height="15" fill="rgb(226,191,16)" fg:x="1304" fg:w="5"/><text x="98.1479%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="97.8979%" y="341" width="0.3754%" height="15" fill="rgb(214,40,45)" fg:x="1304" fg:w="5"/><text x="98.1479%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="97.8979%" y="325" width="0.3754%" height="15" fill="rgb(244,29,26)" fg:x="1304" fg:w="5"/><text x="98.1479%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="97.8979%" y="309" width="0.3754%" height="15" fill="rgb(216,16,5)" fg:x="1304" fg:w="5"/><text x="98.1479%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="97.8979%" y="293" width="0.3754%" height="15" fill="rgb(249,76,35)" fg:x="1304" fg:w="5"/><text x="98.1479%" y="303.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.08%)</title><rect x="98.2733%" y="629" width="0.0751%" height="15" fill="rgb(207,11,44)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="639.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.08%)</title><rect x="98.2733%" y="613" width="0.0751%" height="15" fill="rgb(228,190,49)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="623.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.08%)</title><rect x="98.2733%" y="597" width="0.0751%" height="15" fill="rgb(214,173,12)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="607.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.08%)</title><rect x="98.2733%" y="581" width="0.0751%" height="15" fill="rgb(218,26,35)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.2733%" y="565" width="0.0751%" height="15" fill="rgb(220,200,19)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.2733%" y="549" width="0.0751%" height="15" fill="rgb(239,95,49)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="559.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.2733%" y="533" width="0.0751%" height="15" fill="rgb(235,85,53)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="543.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.08%)</title><rect x="98.2733%" y="517" width="0.0751%" height="15" fill="rgb(233,133,31)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="527.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.08%)</title><rect x="98.2733%" y="501" width="0.0751%" height="15" fill="rgb(218,25,20)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="511.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.08%)</title><rect x="98.2733%" y="485" width="0.0751%" height="15" fill="rgb(252,210,38)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="495.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.08%)</title><rect x="98.2733%" y="469" width="0.0751%" height="15" fill="rgb(242,134,21)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="479.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="98.2733%" y="453" width="0.0751%" height="15" fill="rgb(213,28,48)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="463.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="98.2733%" y="437" width="0.0751%" height="15" fill="rgb(250,196,2)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="98.2733%" y="421" width="0.0751%" height="15" fill="rgb(227,5,17)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="431.50"></text></g><g><title>__libc_write (1 samples, 0.08%)</title><rect x="98.2733%" y="405" width="0.0751%" height="15" fill="rgb(221,226,24)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="415.50"></text></g><g><title>__libc_write (1 samples, 0.08%)</title><rect x="98.2733%" y="389" width="0.0751%" height="15" fill="rgb(211,5,48)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="98.2733%" y="373" width="0.0751%" height="15" fill="rgb(219,150,6)" fg:x="1309" fg:w="1"/><text x="98.5233%" y="383.50"></text></g><g><title>__libc_start_main (13 samples, 0.98%)</title><rect x="97.8228%" y="885" width="0.9760%" height="15" fill="rgb(251,46,16)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="895.50"></text></g><g><title>main (13 samples, 0.98%)</title><rect x="97.8228%" y="869" width="0.9760%" height="15" fill="rgb(220,204,40)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="879.50"></text></g><g><title>std::rt::lang_start_internal (13 samples, 0.98%)</title><rect x="97.8228%" y="853" width="0.9760%" height="15" fill="rgb(211,85,2)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="863.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.98%)</title><rect x="97.8228%" y="837" width="0.9760%" height="15" fill="rgb(229,17,7)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="847.50"></text></g><g><title>std::panicking::try (13 samples, 0.98%)</title><rect x="97.8228%" y="821" width="0.9760%" height="15" fill="rgb(239,72,28)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="831.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.98%)</title><rect x="97.8228%" y="805" width="0.9760%" height="15" fill="rgb(230,47,54)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="815.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (13 samples, 0.98%)</title><rect x="97.8228%" y="789" width="0.9760%" height="15" fill="rgb(214,50,8)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="799.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.98%)</title><rect x="97.8228%" y="773" width="0.9760%" height="15" fill="rgb(216,198,43)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="783.50"></text></g><g><title>std::panicking::try (13 samples, 0.98%)</title><rect x="97.8228%" y="757" width="0.9760%" height="15" fill="rgb(234,20,35)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="767.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.98%)</title><rect x="97.8228%" y="741" width="0.9760%" height="15" fill="rgb(254,45,19)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (13 samples, 0.98%)</title><rect x="97.8228%" y="725" width="0.9760%" height="15" fill="rgb(219,14,44)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="735.50"></text></g><g><title>std::rt::lang_start::{{closure}} (13 samples, 0.98%)</title><rect x="97.8228%" y="709" width="0.9760%" height="15" fill="rgb(217,220,26)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.98%)</title><rect x="97.8228%" y="693" width="0.9760%" height="15" fill="rgb(213,158,28)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.98%)</title><rect x="97.8228%" y="677" width="0.9760%" height="15" fill="rgb(252,51,52)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="687.50"></text></g><g><title>lab4::main (13 samples, 0.98%)</title><rect x="97.8228%" y="661" width="0.9760%" height="15" fill="rgb(246,89,16)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="671.50"></text></g><g><title>lab4::hackathon (13 samples, 0.98%)</title><rect x="97.8228%" y="645" width="0.9760%" height="15" fill="rgb(216,158,49)" fg:x="1303" fg:w="13"/><text x="98.0728%" y="655.50"></text></g><g><title>std::thread::spawn (6 samples, 0.45%)</title><rect x="98.3483%" y="629" width="0.4505%" height="15" fill="rgb(236,107,19)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="639.50"></text></g><g><title>std::thread::Builder::spawn (6 samples, 0.45%)</title><rect x="98.3483%" y="613" width="0.4505%" height="15" fill="rgb(228,185,30)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (6 samples, 0.45%)</title><rect x="98.3483%" y="597" width="0.4505%" height="15" fill="rgb(246,134,8)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (6 samples, 0.45%)</title><rect x="98.3483%" y="581" width="0.4505%" height="15" fill="rgb(214,143,50)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new (6 samples, 0.45%)</title><rect x="98.3483%" y="565" width="0.4505%" height="15" fill="rgb(228,75,8)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="575.50"></text></g><g><title>__pthread_create_2_1 (6 samples, 0.45%)</title><rect x="98.3483%" y="549" width="0.4505%" height="15" fill="rgb(207,175,4)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="559.50"></text></g><g><title>allocate_stack (6 samples, 0.45%)</title><rect x="98.3483%" y="533" width="0.4505%" height="15" fill="rgb(205,108,24)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.3483%" y="517" width="0.4505%" height="15" fill="rgb(244,120,49)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.3483%" y="501" width="0.4505%" height="15" fill="rgb(223,47,38)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.3483%" y="485" width="0.4505%" height="15" fill="rgb(229,179,11)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.3483%" y="469" width="0.4505%" height="15" fill="rgb(231,122,1)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.3483%" y="453" width="0.4505%" height="15" fill="rgb(245,119,9)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.3483%" y="437" width="0.4505%" height="15" fill="rgb(241,163,25)" fg:x="1310" fg:w="6"/><text x="98.5983%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="98.4234%" y="421" width="0.3754%" height="15" fill="rgb(217,214,3)" fg:x="1311" fg:w="5"/><text x="98.6734%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="98.4234%" y="405" width="0.3754%" height="15" fill="rgb(240,86,28)" fg:x="1311" fg:w="5"/><text x="98.6734%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="98.4234%" y="389" width="0.3754%" height="15" fill="rgb(215,47,9)" fg:x="1311" fg:w="5"/><text x="98.6734%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="98.4234%" y="373" width="0.3754%" height="15" fill="rgb(252,25,45)" fg:x="1311" fg:w="5"/><text x="98.6734%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="98.4234%" y="357" width="0.3754%" height="15" fill="rgb(251,164,9)" fg:x="1311" fg:w="5"/><text x="98.6734%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="98.4234%" y="341" width="0.3754%" height="15" fill="rgb(233,194,0)" fg:x="1311" fg:w="5"/><text x="98.6734%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.38%)</title><rect x="98.4234%" y="325" width="0.3754%" height="15" fill="rgb(249,111,24)" fg:x="1311" fg:w="5"/><text x="98.6734%" y="335.50"></text></g><g><title>_start (14 samples, 1.05%)</title><rect x="97.8228%" y="901" width="1.0511%" height="15" fill="rgb(250,223,3)" fg:x="1303" fg:w="14"/><text x="98.0728%" y="911.50"></text></g><g><title>_dl_start (1 samples, 0.08%)</title><rect x="98.7988%" y="885" width="0.0751%" height="15" fill="rgb(236,178,37)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="895.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.08%)</title><rect x="98.7988%" y="869" width="0.0751%" height="15" fill="rgb(241,158,50)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="879.50"></text></g><g><title>dl_main (1 samples, 0.08%)</title><rect x="98.7988%" y="853" width="0.0751%" height="15" fill="rgb(213,121,41)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="863.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="98.7988%" y="837" width="0.0751%" height="15" fill="rgb(240,92,3)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="847.50"></text></g><g><title>__mprotect (1 samples, 0.08%)</title><rect x="98.7988%" y="821" width="0.0751%" height="15" fill="rgb(205,123,3)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="98.7988%" y="805" width="0.0751%" height="15" fill="rgb(205,97,47)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="98.7988%" y="789" width="0.0751%" height="15" fill="rgb(247,152,14)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="98.7988%" y="773" width="0.0751%" height="15" fill="rgb(248,195,53)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="98.7988%" y="757" width="0.0751%" height="15" fill="rgb(226,201,16)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="98.7988%" y="741" width="0.0751%" height="15" fill="rgb(205,98,0)" fg:x="1316" fg:w="1"/><text x="99.0488%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.38%)</title><rect x="98.8739%" y="757" width="0.3754%" height="15" fill="rgb(214,191,48)" fg:x="1317" fg:w="5"/><text x="99.1239%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.38%)</title><rect x="98.8739%" y="741" width="0.3754%" height="15" fill="rgb(237,112,39)" fg:x="1317" fg:w="5"/><text x="99.1239%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.38%)</title><rect x="98.8739%" y="725" width="0.3754%" height="15" fill="rgb(247,203,27)" fg:x="1317" fg:w="5"/><text x="99.1239%" y="735.50"></text></g><g><title>lab4::package::PackageDownloader::run (7 samples, 0.53%)</title><rect x="98.8739%" y="901" width="0.5255%" height="15" fill="rgb(235,124,28)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (7 samples, 0.53%)</title><rect x="98.8739%" y="885" width="0.5255%" height="15" fill="rgb(208,207,46)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (7 samples, 0.53%)</title><rect x="98.8739%" y="869" width="0.5255%" height="15" fill="rgb(234,176,4)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (7 samples, 0.53%)</title><rect x="98.8739%" y="853" width="0.5255%" height="15" fill="rgb(230,133,28)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="863.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.53%)</title><rect x="98.8739%" y="837" width="0.5255%" height="15" fill="rgb(211,137,40)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.53%)</title><rect x="98.8739%" y="821" width="0.5255%" height="15" fill="rgb(254,35,13)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="831.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.53%)</title><rect x="98.8739%" y="805" width="0.5255%" height="15" fill="rgb(225,49,51)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="815.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (7 samples, 0.53%)</title><rect x="98.8739%" y="789" width="0.5255%" height="15" fill="rgb(251,10,15)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="799.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (7 samples, 0.53%)</title><rect x="98.8739%" y="773" width="0.5255%" height="15" fill="rgb(228,207,15)" fg:x="1317" fg:w="7"/><text x="99.1239%" y="783.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.15%)</title><rect x="99.2492%" y="757" width="0.1502%" height="15" fill="rgb(241,99,19)" fg:x="1322" fg:w="2"/><text x="99.4992%" y="767.50"></text></g><g><title>lab4 (1,326 samples, 99.55%)</title><rect x="0.0000%" y="917" width="99.5495%" height="15" fill="rgb(207,104,49)" fg:x="0" fg:w="1326"/><text x="0.2500%" y="927.50">lab4</text></g><g><title>lab4::student::Student::run (2 samples, 0.15%)</title><rect x="99.3994%" y="901" width="0.1502%" height="15" fill="rgb(234,99,18)" fg:x="1324" fg:w="2"/><text x="99.6494%" y="911.50"></text></g><g><title>all (1,332 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(213,191,49)" fg:x="0" fg:w="1332"/><text x="0.2500%" y="943.50"></text></g><g><title>perf-exec (6 samples, 0.45%)</title><rect x="99.5495%" y="917" width="0.4505%" height="15" fill="rgb(210,226,19)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="901" width="0.4505%" height="15" fill="rgb(229,97,18)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="885" width="0.4505%" height="15" fill="rgb(211,167,15)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="869" width="0.4505%" height="15" fill="rgb(210,169,34)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="853" width="0.4505%" height="15" fill="rgb(241,121,31)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="837" width="0.4505%" height="15" fill="rgb(232,40,11)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="821" width="0.4505%" height="15" fill="rgb(205,86,26)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="805" width="0.4505%" height="15" fill="rgb(231,126,28)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="789" width="0.4505%" height="15" fill="rgb(219,221,18)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="773" width="0.4505%" height="15" fill="rgb(211,40,0)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="757" width="0.4505%" height="15" fill="rgb(239,85,43)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="741" width="0.4505%" height="15" fill="rgb(231,55,21)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="725" width="0.4505%" height="15" fill="rgb(225,184,43)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="709" width="0.4505%" height="15" fill="rgb(251,158,41)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.5495%" y="693" width="0.4505%" height="15" fill="rgb(234,159,37)" fg:x="1326" fg:w="6"/><text x="99.7995%" y="703.50"></text></g></svg></svg>